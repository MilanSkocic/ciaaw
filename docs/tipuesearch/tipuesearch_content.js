var tipuesearch = {"pages":[{"title":" ciaaw ","text":"ciaaw Introduction Dependencies Installation License Introduction ciaaw is a  Fortran library providing the standard and abridged atomic weights, \nthe isotopic abundance and the isotopes’ standard atomic weights.\nThe formulas are taken from http://ciaaw.org. \nC API allows usage from C, or can be used as a basis for other wrappers.\nPython wrapper allows easy usage from Python. To use ciaaw within your fpm <https://github.com/fortran-lang/fpm> _ project,\nadd the following to your fpm.toml file: [ dependencies ] iapws = { git = \"https://github.com/MilanSkocic/ciaaw.git\" } Dependencies gcc>=10.0\ngfortran>=10.0\nfpm>=0.7 Installation A Makefile is provided, which uses fpm , for building the library. On windows, msys2 needs to be installed. \n  Add the msys2 binary (usually C:\\msys64\\usr\\bin) to the path in order to be able to use make. On Darwin, the gcc toolchain needs to be installed. Build: the configuration file will set all the environment variables necessary for the compilation chmod +x configure.sh\n    . ./configure.sh\n    make Run tests make test Install make install Uninstall make uninstall License MIT Developer Info Milan Skocic","tags":"home","loc":"index.html"},{"title":"saw_type – ciaaw ","text":"type, public :: saw_type Derived type representing the saw of an element. Components Type Visibility Attributes Name Initial real(kind=dp), public :: asaw Abridged value standard atomic weight. real(kind=dp), public :: asaw_u Abridged uncertainty standard atomic weight. character(len=24), public :: element Element name. character(len=8), public :: footnotes Footnotes real(kind=dp), public :: saw Value standard atomic weight. real(kind=dp), public :: saw_max Max standard atomic weight. real(kind=dp), public :: saw_min Min standard atomic weight. real(kind=dp), public :: saw_u Uncertainty standard atomic weight. character(len=8), public :: symbol Element symbol. integer(kind=int32), public :: z Element atomic number.","tags":"","loc":"type/saw_type.html"},{"title":"capi_saw_type – ciaaw ","text":"type, public, bind(C) :: capi_saw_type Derived type representing an element in C. Components Type Visibility Attributes Name Initial real(kind=c_double), public :: asaw Abridged value standard atomic weight. real(kind=c_double), public :: asaw_u Abridged uncertainty standard atomic weight. character(kind=c_char, len=1), public :: element (25) Element name. character(kind=c_char, len=1), public :: footnotes (9) Footnotes real(kind=c_double), public :: saw Value standard atomic weight. real(kind=c_double), public :: saw_max Max standard atomic weight. real(kind=c_double), public :: saw_min Min standard atomic weight. real(kind=c_double), public :: saw_u Uncertainty standard atomic weight. character(kind=c_char, len=1), public :: symbol (9) Element symbol. integer(kind=c_int), public :: z Element atomic number.","tags":"","loc":"type/capi_saw_type.html"},{"title":"capi_get_version – ciaaw","text":"public  function capi_get_version() result(cptr) bind(c, name='ciaaw_get_version')) Get the version Arguments None Return Value type(c_ptr) C pointer to a string indicating the version. Calls proc~~capi_get_version~~CallsGraph proc~capi_get_version capi_get_version proc~get_version get_version proc~capi_get_version->proc~get_version Help Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs.","tags":"","loc":"proc/capi_get_version.html"},{"title":"get_version – ciaaw","text":"public  function get_version() result(fptr) Get the version Arguments None Return Value character(len=:), pointer Fortran pointer to a string indicating the version.. Called by proc~~get_version~~CalledByGraph proc~get_version get_version proc~capi_get_version capi_get_version proc~capi_get_version->proc~get_version Help Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs.","tags":"","loc":"proc/get_version.html"},{"title":"capi__version – ciaaw","text":"Uses iso_c_binding ciaaw__version module~~capi__version~~UsesGraph module~capi__version capi__version iso_c_binding iso_c_binding module~capi__version->iso_c_binding module~ciaaw__version ciaaw__version module~capi__version->module~ciaaw__version Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~capi__version~~UsedByGraph module~capi__version capi__version module~capi capi module~capi->module~capi__version module~ciaaw ciaaw module~ciaaw->module~capi Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Functions public  function capi_get_version () result(cptr) bind(c, name='ciaaw_get_version')) Get the version Arguments None Return Value type(c_ptr) C pointer to a string indicating the version.","tags":"","loc":"module/capi__version.html"},{"title":"capi__saw – ciaaw","text":"SAW module: C API.\nThe latest values (2021) do not have the year as a suffix in their name.\nOlder values can be used and they feature the year as a suffix in their name. Uses capi__saw_type capi__saw_2021 module~~capi__saw~~UsesGraph module~capi__saw capi__saw module~capi__saw_2021 capi__saw_2021 module~capi__saw->module~capi__saw_2021 module~capi__saw_type capi__saw_type module~capi__saw->module~capi__saw_type module~capi__saw_2021->module~capi__saw_type iso_c_binding iso_c_binding module~capi__saw_2021->iso_c_binding module~ciaaw__saw_2021 ciaaw__saw_2021 module~capi__saw_2021->module~ciaaw__saw_2021 stdlib_kinds stdlib_kinds module~capi__saw_2021->stdlib_kinds module~capi__saw_type->iso_c_binding module~ciaaw__saw_2021->stdlib_kinds module~ciaaw__saw_type ciaaw__saw_type module~ciaaw__saw_2021->module~ciaaw__saw_type module~ciaaw__saw_type->stdlib_kinds Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~capi__saw~~UsedByGraph module~capi__saw capi__saw module~capi capi module~capi->module~capi__saw module~ciaaw ciaaw module~ciaaw->module~capi Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs.","tags":"","loc":"module/capi__saw.html"},{"title":"ciaaw__saw – ciaaw","text":"SAW module\nThe latest values (2021) do not have the year as a suffix in their name.\nOlder values can be used and they feature the year as a suffix in their name. Uses ciaaw__saw_type ciaaw__saw_2021 module~~ciaaw__saw~~UsesGraph module~ciaaw__saw ciaaw__saw module~ciaaw__saw_2021 ciaaw__saw_2021 module~ciaaw__saw->module~ciaaw__saw_2021 module~ciaaw__saw_type ciaaw__saw_type module~ciaaw__saw->module~ciaaw__saw_type module~ciaaw__saw_2021->module~ciaaw__saw_type stdlib_kinds stdlib_kinds module~ciaaw__saw_2021->stdlib_kinds module~ciaaw__saw_type->stdlib_kinds Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~ciaaw__saw~~UsedByGraph module~ciaaw__saw ciaaw__saw module~ciaaw ciaaw module~ciaaw->module~ciaaw__saw Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs.","tags":"","loc":"module/ciaaw__saw.html"},{"title":"capi – ciaaw","text":"Main module for the Ciaaw library: C API. Uses capi__saw capi__version module~~capi~~UsesGraph module~capi capi module~capi__saw capi__saw module~capi->module~capi__saw module~capi__version capi__version module~capi->module~capi__version module~capi__saw_2021 capi__saw_2021 module~capi__saw->module~capi__saw_2021 module~capi__saw_type capi__saw_type module~capi__saw->module~capi__saw_type iso_c_binding iso_c_binding module~capi__version->iso_c_binding module~ciaaw__version ciaaw__version module~capi__version->module~ciaaw__version module~capi__saw_2021->iso_c_binding module~capi__saw_2021->module~capi__saw_type module~ciaaw__saw_2021 ciaaw__saw_2021 module~capi__saw_2021->module~ciaaw__saw_2021 stdlib_kinds stdlib_kinds module~capi__saw_2021->stdlib_kinds module~capi__saw_type->iso_c_binding module~ciaaw__saw_2021->stdlib_kinds module~ciaaw__saw_type ciaaw__saw_type module~ciaaw__saw_2021->module~ciaaw__saw_type module~ciaaw__saw_type->stdlib_kinds Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~capi~~UsedByGraph module~capi capi module~ciaaw ciaaw module~ciaaw->module~capi Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs.","tags":"","loc":"module/capi.html"},{"title":"capi__saw_2021 – ciaaw","text":"Codata Constants - Autogenerated: C API. Uses iso_c_binding ciaaw__saw_2021 stdlib_kinds capi__saw_type module~~capi__saw_2021~~UsesGraph module~capi__saw_2021 capi__saw_2021 iso_c_binding iso_c_binding module~capi__saw_2021->iso_c_binding module~capi__saw_type capi__saw_type module~capi__saw_2021->module~capi__saw_type module~ciaaw__saw_2021 ciaaw__saw_2021 module~capi__saw_2021->module~ciaaw__saw_2021 stdlib_kinds stdlib_kinds module~capi__saw_2021->stdlib_kinds module~capi__saw_type->iso_c_binding module~ciaaw__saw_2021->stdlib_kinds module~ciaaw__saw_type ciaaw__saw_type module~ciaaw__saw_2021->module~ciaaw__saw_type module~ciaaw__saw_type->stdlib_kinds Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~capi__saw_2021~~UsedByGraph module~capi__saw_2021 capi__saw_2021 module~capi__saw capi__saw module~capi__saw->module~capi__saw_2021 module~capi capi module~capi->module~capi__saw module~ciaaw ciaaw module~ciaaw->module~capi Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Visibility Attributes Name Initial type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_0 = capi_saw_type([\"h\", \"y\", \"d\", \"r\", \"o\", \"g\", \"e\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"H\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], H%z, H%saw_min, H%saw_max, H%saw, H%saw_u, H%asaw, H%saw_u, [\"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_1 = capi_saw_type([\"h\", \"e\", \"l\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"H\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], He%z, He%saw_min, He%saw_max, He%saw, He%saw_u, He%asaw, He%saw_u, [\"g\", \" \", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_10 = capi_saw_type([\"s\", \"o\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", \"a\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Na%z, Na%saw_min, Na%saw_max, Na%saw, Na%saw_u, Na%asaw, Na%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_100 = capi_saw_type([\"m\", \"e\", \"n\", \"d\", \"e\", \"l\", \"e\", \"v\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"M\", \"d\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Md%z, Md%saw_min, Md%saw_max, Md%saw, Md%saw_u, Md%asaw, Md%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_101 = capi_saw_type([\"n\", \"o\", \"b\", \"e\", \"l\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", \"o\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], No%z, No%saw_min, No%saw_max, No%saw, No%saw_u, No%asaw, No%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_102 = capi_saw_type([\"l\", \"a\", \"w\", \"r\", \"e\", \"n\", \"c\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"L\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Lr%z, Lr%saw_min, Lr%saw_max, Lr%saw, Lr%saw_u, Lr%asaw, Lr%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_103 = capi_saw_type([\"r\", \"u\", \"t\", \"h\", \"e\", \"r\", \"f\", \"o\", \"r\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"R\", \"f\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Rf%z, Rf%saw_min, Rf%saw_max, Rf%saw, Rf%saw_u, Rf%asaw, Rf%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_104 = capi_saw_type([\"d\", \"u\", \"b\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"D\", \"b\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Db%z, Db%saw_min, Db%saw_max, Db%saw, Db%saw_u, Db%asaw, Db%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_105 = capi_saw_type([\"s\", \"e\", \"a\", \"b\", \"o\", \"r\", \"g\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", \"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Sg%z, Sg%saw_min, Sg%saw_max, Sg%saw, Sg%saw_u, Sg%asaw, Sg%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_106 = capi_saw_type([\"b\", \"o\", \"h\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"B\", \"h\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Bh%z, Bh%saw_min, Bh%saw_max, Bh%saw, Bh%saw_u, Bh%asaw, Bh%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_107 = capi_saw_type([\"h\", \"a\", \"s\", \"s\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"H\", \"s\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Hs%z, Hs%saw_min, Hs%saw_max, Hs%saw, Hs%saw_u, Hs%asaw, Hs%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_108 = capi_saw_type([\"m\", \"e\", \"i\", \"t\", \"n\", \"e\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"M\", \"t\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Mt%z, Mt%saw_min, Mt%saw_max, Mt%saw, Mt%saw_u, Mt%asaw, Mt%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_109 = capi_saw_type([\"d\", \"a\", \"r\", \"m\", \"s\", \"t\", \"a\", \"d\", \"t\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"D\", \"s\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ds%z, Ds%saw_min, Ds%saw_max, Ds%saw, Ds%saw_u, Ds%asaw, Ds%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_11 = capi_saw_type([\"m\", \"a\", \"g\", \"n\", \"e\", \"s\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"M\", \"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Mg%z, Mg%saw_min, Mg%saw_max, Mg%saw, Mg%saw_u, Mg%asaw, Mg%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_110 = capi_saw_type([\"r\", \"o\", \"e\", \"n\", \"t\", \"g\", \"e\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"R\", \"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Rg%z, Rg%saw_min, Rg%saw_max, Rg%saw, Rg%saw_u, Rg%asaw, Rg%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_111 = capi_saw_type([\"c\", \"o\", \"p\", \"e\", \"r\", \"n\", \"i\", \"c\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Cn%z, Cn%saw_min, Cn%saw_max, Cn%saw, Cn%saw_u, Cn%asaw, Cn%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_112 = capi_saw_type([\"n\", \"i\", \"h\", \"o\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", \"h\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Nh%z, Nh%saw_min, Nh%saw_max, Nh%saw, Nh%saw_u, Nh%asaw, Nh%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_113 = capi_saw_type([\"f\", \"l\", \"e\", \"r\", \"o\", \"v\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"F\", \"l\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Fl%z, Fl%saw_min, Fl%saw_max, Fl%saw, Fl%saw_u, Fl%asaw, Fl%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_114 = capi_saw_type([\"m\", \"o\", \"s\", \"c\", \"o\", \"v\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"M\", \"c\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Mc%z, Mc%saw_min, Mc%saw_max, Mc%saw, Mc%saw_u, Mc%asaw, Mc%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_115 = capi_saw_type([\"l\", \"i\", \"v\", \"e\", \"r\", \"m\", \"o\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"L\", \"v\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Lv%z, Lv%saw_min, Lv%saw_max, Lv%saw, Lv%saw_u, Lv%asaw, Lv%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_116 = capi_saw_type([\"t\", \"e\", \"n\", \"n\", \"e\", \"s\", \"i\", \"n\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"s\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ts%z, Ts%saw_min, Ts%saw_max, Ts%saw, Ts%saw_u, Ts%asaw, Ts%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_117 = capi_saw_type([\"o\", \"r\", \"g\", \"a\", \"n\", \"e\", \"s\", \"s\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"O\", \"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Og%z, Og%saw_min, Og%saw_max, Og%saw, Og%saw_u, Og%asaw, Og%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_12 = capi_saw_type([\"a\", \"l\", \"u\", \"m\", \"i\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"A\", \"l\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Al%z, Al%saw_min, Al%saw_max, Al%saw, Al%saw_u, Al%asaw, Al%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_13 = capi_saw_type([\"s\", \"i\", \"l\", \"i\", \"c\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", \"i\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Si%z, Si%saw_min, Si%saw_max, Si%saw, Si%saw_u, Si%asaw, Si%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_14 = capi_saw_type([\"p\", \"h\", \"o\", \"s\", \"p\", \"h\", \"o\", \"r\", \"u\", \"s\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], P%z, P%saw_min, P%saw_max, P%saw, P%saw_u, P%asaw, P%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_15 = capi_saw_type([\"s\", \"u\", \"l\", \"f\", \"u\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], S%z, S%saw_min, S%saw_max, S%saw, S%saw_u, S%asaw, S%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_16 = capi_saw_type([\"c\", \"h\", \"l\", \"o\", \"r\", \"i\", \"n\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"l\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Cl%z, Cl%saw_min, Cl%saw_max, Cl%saw, Cl%saw_u, Cl%asaw, Cl%saw_u, [\"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_17 = capi_saw_type([\"a\", \"r\", \"g\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"A\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ar%z, Ar%saw_min, Ar%saw_max, Ar%saw, Ar%saw_u, Ar%asaw, Ar%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_18 = capi_saw_type([\"p\", \"o\", \"t\", \"a\", \"s\", \"s\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"K\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], K%z, K%saw_min, K%saw_max, K%saw, K%saw_u, K%asaw, K%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_19 = capi_saw_type([\"c\", \"a\", \"l\", \"c\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"a\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ca%z, Ca%saw_min, Ca%saw_max, Ca%saw, Ca%saw_u, Ca%asaw, Ca%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_2 = capi_saw_type([\"l\", \"i\", \"t\", \"h\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"L\", \"i\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Li%z, Li%saw_min, Li%saw_max, Li%saw, Li%saw_u, Li%asaw, Li%saw_u, [\"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_20 = capi_saw_type([\"s\", \"c\", \"a\", \"n\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", \"c\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Sc%z, Sc%saw_min, Sc%saw_max, Sc%saw, Sc%saw_u, Sc%asaw, Sc%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_21 = capi_saw_type([\"t\", \"i\", \"t\", \"a\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"i\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ti%z, Ti%saw_min, Ti%saw_max, Ti%saw, Ti%saw_u, Ti%asaw, Ti%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_22 = capi_saw_type([\"v\", \"a\", \"n\", \"a\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"V\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], V%z, V%saw_min, V%saw_max, V%saw, V%saw_u, V%asaw, V%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_23 = capi_saw_type([\"c\", \"h\", \"r\", \"o\", \"m\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Cr%z, Cr%saw_min, Cr%saw_max, Cr%saw, Cr%saw_u, Cr%asaw, Cr%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_24 = capi_saw_type([\"m\", \"a\", \"n\", \"g\", \"a\", \"n\", \"e\", \"s\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"M\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Mn%z, Mn%saw_min, Mn%saw_max, Mn%saw, Mn%saw_u, Mn%asaw, Mn%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_25 = capi_saw_type([\"i\", \"r\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"F\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Fe%z, Fe%saw_min, Fe%saw_max, Fe%saw, Fe%saw_u, Fe%asaw, Fe%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_26 = capi_saw_type([\"c\", \"o\", \"b\", \"a\", \"l\", \"t\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"o\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Co%z, Co%saw_min, Co%saw_max, Co%saw, Co%saw_u, Co%asaw, Co%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_27 = capi_saw_type([\"n\", \"i\", \"c\", \"k\", \"e\", \"l\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", \"i\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ni%z, Ni%saw_min, Ni%saw_max, Ni%saw, Ni%saw_u, Ni%asaw, Ni%saw_u, [\"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_28 = capi_saw_type([\"c\", \"o\", \"p\", \"p\", \"e\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"u\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Cu%z, Cu%saw_min, Cu%saw_max, Cu%saw, Cu%saw_u, Cu%asaw, Cu%saw_u, [\"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_29 = capi_saw_type([\"z\", \"i\", \"n\", \"c\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"Z\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Zn%z, Zn%saw_min, Zn%saw_max, Zn%saw, Zn%saw_u, Zn%asaw, Zn%saw_u, [\"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_3 = capi_saw_type([\"b\", \"e\", \"r\", \"y\", \"l\", \"l\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"B\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Be%z, Be%saw_min, Be%saw_max, Be%saw, Be%saw_u, Be%asaw, Be%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_30 = capi_saw_type([\"g\", \"a\", \"l\", \"l\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"G\", \"a\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ga%z, Ga%saw_min, Ga%saw_max, Ga%saw, Ga%saw_u, Ga%asaw, Ga%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_31 = capi_saw_type([\"g\", \"e\", \"r\", \"m\", \"a\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"G\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ge%z, Ge%saw_min, Ge%saw_max, Ge%saw, Ge%saw_u, Ge%asaw, Ge%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_32 = capi_saw_type([\"a\", \"r\", \"s\", \"e\", \"n\", \"i\", \"c\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"A\", \"s\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], As%z, As%saw_min, As%saw_max, As%saw, As%saw_u, As%asaw, As%saw_u, [\"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_33 = capi_saw_type([\"s\", \"e\", \"l\", \"e\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Se%z, Se%saw_min, Se%saw_max, Se%saw, Se%saw_u, Se%asaw, Se%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_34 = capi_saw_type([\"b\", \"r\", \"o\", \"m\", \"i\", \"n\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"B\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Br%z, Br%saw_min, Br%saw_max, Br%saw, Br%saw_u, Br%asaw, Br%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_35 = capi_saw_type([\"k\", \"r\", \"y\", \"p\", \"t\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"K\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Kr%z, Kr%saw_min, Kr%saw_max, Kr%saw, Kr%saw_u, Kr%asaw, Kr%saw_u, [\"g\", \" \", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_36 = capi_saw_type([\"r\", \"u\", \"b\", \"i\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"R\", \"b\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Rb%z, Rb%saw_min, Rb%saw_max, Rb%saw, Rb%saw_u, Rb%asaw, Rb%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_37 = capi_saw_type([\"s\", \"t\", \"r\", \"o\", \"n\", \"t\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Sr%z, Sr%saw_min, Sr%saw_max, Sr%saw, Sr%saw_u, Sr%asaw, Sr%saw_u, [\"g\", \" \", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_38 = capi_saw_type([\"y\", \"t\", \"t\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"Y\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], Y%z, Y%saw_min, Y%saw_max, Y%saw, Y%saw_u, Y%asaw, Y%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_39 = capi_saw_type([\"z\", \"i\", \"r\", \"c\", \"o\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"Z\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Zr%z, Zr%saw_min, Zr%saw_max, Zr%saw, Zr%saw_u, Zr%asaw, Zr%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_4 = capi_saw_type([\"b\", \"o\", \"r\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"B\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], B%z, B%saw_min, B%saw_max, B%saw, B%saw_u, B%asaw, B%saw_u, [\"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_40 = capi_saw_type([\"n\", \"o\", \"b\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", \"b\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Nb%z, Nb%saw_min, Nb%saw_max, Nb%saw, Nb%saw_u, Nb%asaw, Nb%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_41 = capi_saw_type([\"m\", \"o\", \"l\", \"y\", \"b\", \"d\", \"e\", \"n\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"M\", \"o\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Mo%z, Mo%saw_min, Mo%saw_max, Mo%saw, Mo%saw_u, Mo%asaw, Mo%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_42 = capi_saw_type([\"t\", \"e\", \"c\", \"h\", \"n\", \"e\", \"t\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"c\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Tc%z, Tc%saw_min, Tc%saw_max, Tc%saw, Tc%saw_u, Tc%asaw, Tc%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_43 = capi_saw_type([\"r\", \"u\", \"t\", \"h\", \"e\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"R\", \"u\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ru%z, Ru%saw_min, Ru%saw_max, Ru%saw, Ru%saw_u, Ru%asaw, Ru%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_44 = capi_saw_type([\"r\", \"h\", \"o\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"R\", \"h\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Rh%z, Rh%saw_min, Rh%saw_max, Rh%saw, Rh%saw_u, Rh%asaw, Rh%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_45 = capi_saw_type([\"p\", \"a\", \"l\", \"l\", \"a\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", \"d\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Pd%z, Pd%saw_min, Pd%saw_max, Pd%saw, Pd%saw_u, Pd%asaw, Pd%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_46 = capi_saw_type([\"s\", \"i\", \"l\", \"v\", \"e\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"A\", \"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ag%z, Ag%saw_min, Ag%saw_max, Ag%saw, Ag%saw_u, Ag%asaw, Ag%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_47 = capi_saw_type([\"c\", \"a\", \"d\", \"m\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"d\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Cd%z, Cd%saw_min, Cd%saw_max, Cd%saw, Cd%saw_u, Cd%asaw, Cd%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_48 = capi_saw_type([\"i\", \"n\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"I\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], In%z, In%saw_min, In%saw_max, In%saw, In%saw_u, In%asaw, In%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_49 = capi_saw_type([\"t\", \"i\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Sn%z, Sn%saw_min, Sn%saw_max, Sn%saw, Sn%saw_u, Sn%asaw, Sn%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_5 = capi_saw_type([\"c\", \"a\", \"r\", \"b\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], C%z, C%saw_min, C%saw_max, C%saw, C%saw_u, C%asaw, C%saw_u, [\"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_50 = capi_saw_type([\"a\", \"n\", \"t\", \"i\", \"m\", \"o\", \"n\", \"y\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", \"b\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Sb%z, Sb%saw_min, Sb%saw_max, Sb%saw, Sb%saw_u, Sb%asaw, Sb%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_51 = capi_saw_type([\"t\", \"e\", \"l\", \"l\", \"u\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Te%z, Te%saw_min, Te%saw_max, Te%saw, Te%saw_u, Te%asaw, Te%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_52 = capi_saw_type([\"i\", \"o\", \"d\", \"i\", \"n\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"I\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], I%z, I%saw_min, I%saw_max, I%saw, I%saw_u, I%asaw, I%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_53 = capi_saw_type([\"x\", \"e\", \"n\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"X\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Xe%z, Xe%saw_min, Xe%saw_max, Xe%saw, Xe%saw_u, Xe%asaw, Xe%saw_u, [\"g\", \" \", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_54 = capi_saw_type([\"c\", \"a\", \"e\", \"s\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"s\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Cs%z, Cs%saw_min, Cs%saw_max, Cs%saw, Cs%saw_u, Cs%asaw, Cs%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_55 = capi_saw_type([\"b\", \"a\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"B\", \"a\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ba%z, Ba%saw_min, Ba%saw_max, Ba%saw, Ba%saw_u, Ba%asaw, Ba%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_56 = capi_saw_type([\"l\", \"a\", \"n\", \"t\", \"h\", \"a\", \"n\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"L\", \"a\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], La%z, La%saw_min, La%saw_max, La%saw, La%saw_u, La%asaw, La%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_57 = capi_saw_type([\"c\", \"e\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ce%z, Ce%saw_min, Ce%saw_max, Ce%saw, Ce%saw_u, Ce%asaw, Ce%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_58 = capi_saw_type([\"p\", \"r\", \"a\", \"s\", \"e\", \"o\", \"d\", \"y\", \"m\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Pr%z, Pr%saw_min, Pr%saw_max, Pr%saw, Pr%saw_u, Pr%asaw, Pr%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_59 = capi_saw_type([\"n\", \"e\", \"o\", \"d\", \"y\", \"m\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", \"d\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Nd%z, Nd%saw_min, Nd%saw_max, Nd%saw, Nd%saw_u, Nd%asaw, Nd%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_6 = capi_saw_type([\"n\", \"i\", \"t\", \"r\", \"o\", \"g\", \"e\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], N%z, N%saw_min, N%saw_max, N%saw, N%saw_u, N%asaw, N%saw_u, [\"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_60 = capi_saw_type([\"p\", \"r\", \"o\", \"m\", \"e\", \"t\", \"h\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Pm%z, Pm%saw_min, Pm%saw_max, Pm%saw, Pm%saw_u, Pm%asaw, Pm%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_61 = capi_saw_type([\"s\", \"a\", \"m\", \"a\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"S\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Sm%z, Sm%saw_min, Sm%saw_max, Sm%saw, Sm%saw_u, Sm%asaw, Sm%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_62 = capi_saw_type([\"e\", \"u\", \"r\", \"o\", \"p\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"E\", \"u\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Eu%z, Eu%saw_min, Eu%saw_max, Eu%saw, Eu%saw_u, Eu%asaw, Eu%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_63 = capi_saw_type([\"g\", \"a\", \"d\", \"o\", \"l\", \"i\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"G\", \"d\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Gd%z, Gd%saw_min, Gd%saw_max, Gd%saw, Gd%saw_u, Gd%asaw, Gd%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_64 = capi_saw_type([\"t\", \"e\", \"r\", \"b\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"b\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Tb%z, Tb%saw_min, Tb%saw_max, Tb%saw, Tb%saw_u, Tb%asaw, Tb%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_65 = capi_saw_type([\"d\", \"y\", \"s\", \"p\", \"r\", \"o\", \"s\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"D\", \"y\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Dy%z, Dy%saw_min, Dy%saw_max, Dy%saw, Dy%saw_u, Dy%asaw, Dy%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_66 = capi_saw_type([\"h\", \"o\", \"l\", \"m\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"H\", \"o\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ho%z, Ho%saw_min, Ho%saw_max, Ho%saw, Ho%saw_u, Ho%asaw, Ho%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_67 = capi_saw_type([\"e\", \"r\", \"b\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"E\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Er%z, Er%saw_min, Er%saw_max, Er%saw, Er%saw_u, Er%asaw, Er%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_68 = capi_saw_type([\"t\", \"h\", \"u\", \"l\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Tm%z, Tm%saw_min, Tm%saw_max, Tm%saw, Tm%saw_u, Tm%asaw, Tm%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_69 = capi_saw_type([\"y\", \"t\", \"t\", \"e\", \"r\", \"b\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"Y\", \"b\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Yb%z, Yb%saw_min, Yb%saw_max, Yb%saw, Yb%saw_u, Yb%asaw, Yb%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_7 = capi_saw_type([\"o\", \"x\", \"y\", \"g\", \"e\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"O\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], O%z, O%saw_min, O%saw_max, O%saw, O%saw_u, O%asaw, O%saw_u, [\"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_70 = capi_saw_type([\"l\", \"u\", \"t\", \"e\", \"t\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"L\", \"u\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Lu%z, Lu%saw_min, Lu%saw_max, Lu%saw, Lu%saw_u, Lu%asaw, Lu%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_71 = capi_saw_type([\"h\", \"a\", \"f\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"H\", \"f\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Hf%z, Hf%saw_min, Hf%saw_max, Hf%saw, Hf%saw_u, Hf%asaw, Hf%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_72 = capi_saw_type([\"t\", \"a\", \"n\", \"t\", \"a\", \"l\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"a\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ta%z, Ta%saw_min, Ta%saw_max, Ta%saw, Ta%saw_u, Ta%asaw, Ta%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_73 = capi_saw_type([\"t\", \"u\", \"n\", \"g\", \"s\", \"t\", \"e\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"W\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], W%z, W%saw_min, W%saw_max, W%saw, W%saw_u, W%asaw, W%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_74 = capi_saw_type([\"r\", \"h\", \"e\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"R\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Re%z, Re%saw_min, Re%saw_max, Re%saw, Re%saw_u, Re%asaw, Re%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_75 = capi_saw_type([\"o\", \"s\", \"m\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"O\", \"s\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Os%z, Os%saw_min, Os%saw_max, Os%saw, Os%saw_u, Os%asaw, Os%saw_u, [\"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_76 = capi_saw_type([\"i\", \"r\", \"i\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"I\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ir%z, Ir%saw_min, Ir%saw_max, Ir%saw, Ir%saw_u, Ir%asaw, Ir%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_77 = capi_saw_type([\"p\", \"l\", \"a\", \"t\", \"i\", \"n\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", \"t\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Pt%z, Pt%saw_min, Pt%saw_max, Pt%saw, Pt%saw_u, Pt%asaw, Pt%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_78 = capi_saw_type([\"g\", \"o\", \"l\", \"d\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"A\", \"u\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Au%z, Au%saw_min, Au%saw_max, Au%saw, Au%saw_u, Au%asaw, Au%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_79 = capi_saw_type([\"m\", \"e\", \"r\", \"c\", \"u\", \"r\", \"y\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"H\", \"g\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Hg%z, Hg%saw_min, Hg%saw_max, Hg%saw, Hg%saw_u, Hg%asaw, Hg%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_8 = capi_saw_type([\"f\", \"l\", \"u\", \"o\", \"r\", \"i\", \"n\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"F\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], F%z, F%saw_min, F%saw_max, F%saw, F%saw_u, F%asaw, F%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_80 = capi_saw_type([\"t\", \"h\", \"a\", \"l\", \"l\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"l\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Tl%z, Tl%saw_min, Tl%saw_max, Tl%saw, Tl%saw_u, Tl%asaw, Tl%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_81 = capi_saw_type([\"l\", \"e\", \"a\", \"d\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", \"b\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Pb%z, Pb%saw_min, Pb%saw_max, Pb%saw, Pb%saw_u, Pb%asaw, Pb%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_82 = capi_saw_type([\"b\", \"i\", \"s\", \"m\", \"u\", \"t\", \"h\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"B\", \"i\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Bi%z, Bi%saw_min, Bi%saw_max, Bi%saw, Bi%saw_u, Bi%asaw, Bi%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_83 = capi_saw_type([\"p\", \"o\", \"l\", \"o\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", \"o\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Po%z, Po%saw_min, Po%saw_max, Po%saw, Po%saw_u, Po%asaw, Po%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_84 = capi_saw_type([\"a\", \"s\", \"t\", \"a\", \"t\", \"i\", \"n\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"A\", \"t\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], At%z, At%saw_min, At%saw_max, At%saw, At%saw_u, At%asaw, At%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_85 = capi_saw_type([\"r\", \"a\", \"d\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"R\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Rn%z, Rn%saw_min, Rn%saw_max, Rn%saw, Rn%saw_u, Rn%asaw, Rn%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_86 = capi_saw_type([\"f\", \"r\", \"a\", \"n\", \"c\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"F\", \"r\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Fr%z, Fr%saw_min, Fr%saw_max, Fr%saw, Fr%saw_u, Fr%asaw, Fr%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_87 = capi_saw_type([\"r\", \"a\", \"d\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"R\", \"a\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ra%z, Ra%saw_min, Ra%saw_max, Ra%saw, Ra%saw_u, Ra%asaw, Ra%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_88 = capi_saw_type([\"a\", \"c\", \"t\", \"i\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"A\", \"c\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ac%z, Ac%saw_min, Ac%saw_max, Ac%saw, Ac%saw_u, Ac%asaw, Ac%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_89 = capi_saw_type([\"t\", \"h\", \"o\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"T\", \"h\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Th%z, Th%saw_min, Th%saw_max, Th%saw, Th%saw_u, Th%asaw, Th%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_9 = capi_saw_type([\"n\", \"e\", \"o\", \"n\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", \"e\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Ne%z, Ne%saw_min, Ne%saw_max, Ne%saw, Ne%saw_u, Ne%asaw, Ne%saw_u, [\"g\", \" \", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_90 = capi_saw_type([\"p\", \"r\", \"o\", \"t\", \"a\", \"c\", \"t\", \"i\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", \"a\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Pa%z, Pa%saw_min, Pa%saw_max, Pa%saw, Pa%saw_u, Pa%asaw, Pa%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_91 = capi_saw_type([\"u\", \"r\", \"a\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"U\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \"], U%z, U%saw_min, U%saw_max, U%saw, U%saw_u, U%asaw, U%saw_u, [\"g\", \" \", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_92 = capi_saw_type([\"n\", \"e\", \"p\", \"t\", \"u\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"N\", \"p\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Np%z, Np%saw_min, Np%saw_max, Np%saw, Np%saw_u, Np%asaw, Np%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_93 = capi_saw_type([\"p\", \"l\", \"u\", \"t\", \"o\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"P\", \"u\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Pu%z, Pu%saw_min, Pu%saw_max, Pu%saw, Pu%saw_u, Pu%asaw, Pu%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_94 = capi_saw_type([\"a\", \"m\", \"e\", \"r\", \"i\", \"c\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"A\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Am%z, Am%saw_min, Am%saw_max, Am%saw, Am%saw_u, Am%asaw, Am%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_95 = capi_saw_type([\"c\", \"u\", \"r\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Cm%z, Cm%saw_min, Cm%saw_max, Cm%saw, Cm%saw_u, Cm%asaw, Cm%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_96 = capi_saw_type([\"b\", \"e\", \"r\", \"k\", \"e\", \"l\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"B\", \"k\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Bk%z, Bk%saw_min, Bk%saw_max, Bk%saw, Bk%saw_u, Bk%asaw, Bk%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_97 = capi_saw_type([\"c\", \"a\", \"l\", \"i\", \"f\", \"o\", \"r\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"C\", \"f\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Cf%z, Cf%saw_min, Cf%saw_max, Cf%saw, Cf%saw_u, Cf%asaw, Cf%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_98 = capi_saw_type([\"e\", \"i\", \"n\", \"s\", \"t\", \"e\", \"i\", \"n\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"E\", \"s\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Es%z, Es%saw_min, Es%saw_max, Es%saw, Es%saw_u, Es%asaw, Es%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) type( capi_saw_type ), public, bind(C, name=\"0\") :: capi_99 = capi_saw_type([\"f\", \"e\", \"r\", \"m\", \"i\", \"u\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"], [\"F\", \"m\", c_null_char, \" \", \" \", \" \", \" \", \" \", \" \"], Fm%z, Fm%saw_min, Fm%saw_max, Fm%saw, Fm%saw_u, Fm%asaw, Fm%saw_u, [c_null_char, \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"]) integer(kind=c_int), public, bind(C, name=\"0\") :: capi_YEAR = YEAR","tags":"","loc":"module/capi__saw_2021.html"},{"title":"ciaaw__saw_type – ciaaw","text":"Derived types for Standard Atomic Weights. Uses stdlib_kinds module~~ciaaw__saw_type~~UsesGraph module~ciaaw__saw_type ciaaw__saw_type stdlib_kinds stdlib_kinds module~ciaaw__saw_type->stdlib_kinds Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~ciaaw__saw_type~~UsedByGraph module~ciaaw__saw_type ciaaw__saw_type module~ciaaw__saw ciaaw__saw module~ciaaw__saw->module~ciaaw__saw_type module~ciaaw__saw_2021 ciaaw__saw_2021 module~ciaaw__saw->module~ciaaw__saw_2021 module~ciaaw__saw_2021->module~ciaaw__saw_type module~capi__saw_2021 capi__saw_2021 module~capi__saw_2021->module~ciaaw__saw_2021 module~ciaaw ciaaw module~ciaaw->module~ciaaw__saw module~capi capi module~ciaaw->module~capi module~capi__saw capi__saw module~capi__saw->module~capi__saw_2021 module~capi->module~capi__saw Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Derived Types type, public :: saw_type Derived type representing the saw of an element. Components Type Visibility Attributes Name Initial real(kind=dp), public :: asaw Abridged value standard atomic weight. real(kind=dp), public :: asaw_u Abridged uncertainty standard atomic weight. character(len=24), public :: element Element name. character(len=8), public :: footnotes Footnotes real(kind=dp), public :: saw Value standard atomic weight. real(kind=dp), public :: saw_max Max standard atomic weight. real(kind=dp), public :: saw_min Min standard atomic weight. real(kind=dp), public :: saw_u Uncertainty standard atomic weight. character(len=8), public :: symbol Element symbol. integer(kind=int32), public :: z Element atomic number.","tags":"","loc":"module/ciaaw__saw_type.html"},{"title":"capi__saw_type – ciaaw","text":"Ciaaw saw type: C API. Uses iso_c_binding module~~capi__saw_type~~UsesGraph module~capi__saw_type capi__saw_type iso_c_binding iso_c_binding module~capi__saw_type->iso_c_binding Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~capi__saw_type~~UsedByGraph module~capi__saw_type capi__saw_type module~capi__saw capi__saw module~capi__saw->module~capi__saw_type module~capi__saw_2021 capi__saw_2021 module~capi__saw->module~capi__saw_2021 module~capi__saw_2021->module~capi__saw_type module~capi capi module~capi->module~capi__saw module~ciaaw ciaaw module~ciaaw->module~capi Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Derived Types type, public, bind(C) :: capi_saw_type Derived type representing an element in C. Components Type Visibility Attributes Name Initial real(kind=c_double), public :: asaw Abridged value standard atomic weight. real(kind=c_double), public :: asaw_u Abridged uncertainty standard atomic weight. character(kind=c_char, len=1), public :: element (25) Element name. character(kind=c_char, len=1), public :: footnotes (9) Footnotes real(kind=c_double), public :: saw Value standard atomic weight. real(kind=c_double), public :: saw_max Max standard atomic weight. real(kind=c_double), public :: saw_min Min standard atomic weight. real(kind=c_double), public :: saw_u Uncertainty standard atomic weight. character(kind=c_char, len=1), public :: symbol (9) Element symbol. integer(kind=c_int), public :: z Element atomic number.","tags":"","loc":"module/capi__saw_type.html"},{"title":"ciaaw__saw_2021 – ciaaw","text":"Ciaaw saw - Autogenerated Uses ciaaw__saw_type stdlib_kinds module~~ciaaw__saw_2021~~UsesGraph module~ciaaw__saw_2021 ciaaw__saw_2021 module~ciaaw__saw_type ciaaw__saw_type module~ciaaw__saw_2021->module~ciaaw__saw_type stdlib_kinds stdlib_kinds module~ciaaw__saw_2021->stdlib_kinds module~ciaaw__saw_type->stdlib_kinds Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~ciaaw__saw_2021~~UsedByGraph module~ciaaw__saw_2021 ciaaw__saw_2021 module~capi__saw_2021 capi__saw_2021 module~capi__saw_2021->module~ciaaw__saw_2021 module~ciaaw__saw ciaaw__saw module~ciaaw__saw->module~ciaaw__saw_2021 module~capi__saw capi__saw module~capi__saw->module~capi__saw_2021 module~ciaaw ciaaw module~ciaaw->module~ciaaw__saw module~capi capi module~ciaaw->module~capi module~capi->module~capi__saw Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Visibility Attributes Name Initial type( saw_type ), public, parameter :: Ac = saw_type(\"actinium\", \"Ac\", 89, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") actinium type( saw_type ), public, parameter :: Ag = saw_type(\"silver\", \"Ag\", 47, nan_dp, nan_dp, 107.8682_dp, 0.0002_dp, 107.87_dp, 0.01_dp, \"g\") silver type( saw_type ), public, parameter :: Al = saw_type(\"aluminium\", \"Al\", 13, nan_dp, nan_dp, 26.9815384_dp, 0.0000003_dp, 26.982_dp, 0.001_dp, \"\") aluminium type( saw_type ), public, parameter :: Am = saw_type(\"americium\", \"Am\", 95, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") americium type( saw_type ), public, parameter :: Ar = saw_type(\"argon\", \"Ar\", 18, 39.792_dp, 39.963_dp, 39.88_dp, 0.05_dp, 39.95_dp, 0.16_dp, \"\") argon type( saw_type ), public, parameter :: As = saw_type(\"arsenic\", \"As\", 33, nan_dp, nan_dp, 74.921595_dp, 0.000006_dp, 74.922_dp, 0.001_dp, \"r\") arsenic type( saw_type ), public, parameter :: At = saw_type(\"astatine\", \"At\", 85, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") astatine type( saw_type ), public, parameter :: Au = saw_type(\"gold\", \"Au\", 79, nan_dp, nan_dp, 196.966570_dp, 0.000004_dp, 196.97_dp, 0.01_dp, \"\") gold type( saw_type ), public, parameter :: B = saw_type(\"boron\", \"B\", 5, 10.806_dp, 10.821_dp, 10.813_dp, 0.005_dp, 10.81_dp, 0.02_dp, \"m\") boron type( saw_type ), public, parameter :: Ba = saw_type(\"barium\", \"Ba\", 56, nan_dp, nan_dp, 137.327_dp, 0.007_dp, 137.33_dp, 0.01_dp, \"\") barium type( saw_type ), public, parameter :: Be = saw_type(\"beryllium\", \"Be\", 4, nan_dp, nan_dp, 9.0121831_dp, 0.0000005_dp, 9.0122_dp, 0.00001_dp, \"\") beryllium type( saw_type ), public, parameter :: Bh = saw_type(\"bohrium\", \"Bh\", 107, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") bohrium type( saw_type ), public, parameter :: Bi = saw_type(\"bismuth\", \"Bi\", 83, nan_dp, nan_dp, 208.98040_dp, 0.00001_dp, 208.98_dp, 0.01_dp, \"\") bismuth type( saw_type ), public, parameter :: Bk = saw_type(\"berkelium\", \"Bk\", 97, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") berkelium type( saw_type ), public, parameter :: Br = saw_type(\"bromine\", \"Br\", 35, 79.901_dp, 79.907_dp, 79.904_dp, 0.002_dp, 79.904_dp, 0.003_dp, \"\") bromine type( saw_type ), public, parameter :: C = saw_type(\"carbon\", \"C\", 6, 12.0096_dp, 12.0116_dp, 12.0106_dp, 0.0006_dp, 12.011_dp, 0.002_dp, \"m\") carbon type( saw_type ), public, parameter :: Ca = saw_type(\"calcium\", \"Ca\", 20, nan_dp, nan_dp, 40.078_dp, 0.004_dp, 40.078_dp, 0.004_dp, \"g\") calcium type( saw_type ), public, parameter :: Cd = saw_type(\"cadmium\", \"Cd\", 48, nan_dp, nan_dp, 112.414_dp, 0.004_dp, 112.41_dp, 0.01_dp, \"g\") cadmium type( saw_type ), public, parameter :: Ce = saw_type(\"cerium\", \"Ce\", 58, nan_dp, nan_dp, 140.116_dp, 0.001_dp, 140.12_dp, 0.01_dp, \"g\") cerium type( saw_type ), public, parameter :: Cf = saw_type(\"californium\", \"Cf\", 98, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") californium type( saw_type ), public, parameter :: Cl = saw_type(\"chlorine\", \"Cl\", 17, 35.446_dp, 35.457_dp, 35.451_dp, 0.004_dp, 35.45_dp, 0.01_dp, \"m\") chlorine type( saw_type ), public, parameter :: Cm = saw_type(\"curium\", \"Cm\", 96, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") curium type( saw_type ), public, parameter :: Cn = saw_type(\"copernicium\", \"Cn\", 112, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") copernicium type( saw_type ), public, parameter :: Co = saw_type(\"cobalt\", \"Co\", 27, nan_dp, nan_dp, 58.933194_dp, 0.000003_dp, 58.933_dp, 0.001_dp, \"\") cobalt type( saw_type ), public, parameter :: Cr = saw_type(\"chromium\", \"Cr\", 24, nan_dp, nan_dp, 51.9961_dp, 0.0006_dp, 51.996_dp, 0.001_dp, \"\") chromium type( saw_type ), public, parameter :: Cs = saw_type(\"caesium\", \"Cs\", 55, nan_dp, nan_dp, 132.90545196_dp, 0.00000006_dp, 132.91_dp, 0.01_dp, \"\") caesium type( saw_type ), public, parameter :: Cu = saw_type(\"copper\", \"Cu\", 29, nan_dp, nan_dp, 63.546_dp, 0.003_dp, 63.546_dp, 0.003_dp, \"r\") copper type( saw_type ), public, parameter :: Db = saw_type(\"dubnium\", \"Db\", 105, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") dubnium type( saw_type ), public, parameter :: Ds = saw_type(\"darmstadtium\", \"Ds\", 110, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") darmstadtium type( saw_type ), public, parameter :: Dy = saw_type(\"dysprosium\", \"Dy\", 66, nan_dp, nan_dp, 162.500_dp, 0.001_dp, 162.50_dp, 0.01_dp, \"g\") dysprosium type( saw_type ), public, parameter :: Er = saw_type(\"erbium\", \"Er\", 68, nan_dp, nan_dp, 167.259_dp, 0.003_dp, 167.26_dp, 0.01_dp, \"g\") erbium type( saw_type ), public, parameter :: Es = saw_type(\"einsteinium\", \"Es\", 99, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") einsteinium type( saw_type ), public, parameter :: Eu = saw_type(\"europium\", \"Eu\", 63, nan_dp, nan_dp, 151.964_dp, 0.001_dp, 151.96_dp, 0.01_dp, \"g\") europium type( saw_type ), public, parameter :: F = saw_type(\"fluorine\", \"F\", 9, nan_dp, nan_dp, 18.998403162_dp, 0.000000005_dp, 18.998_dp, 0.001_dp, \"\") fluorine type( saw_type ), public, parameter :: Fe = saw_type(\"iron\", \"Fe\", 26, nan_dp, nan_dp, 55.845_dp, 0.002_dp, 55.845_dp, 0.002_dp, \"\") iron type( saw_type ), public, parameter :: Fl = saw_type(\"flerovium\", \"Fl\", 114, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") flerovium type( saw_type ), public, parameter :: Fm = saw_type(\"fermium\", \"Fm\", 100, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") fermium type( saw_type ), public, parameter :: Fr = saw_type(\"francium\", \"Fr\", 87, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") francium type( saw_type ), public, parameter :: Ga = saw_type(\"gallium\", \"Ga\", 31, nan_dp, nan_dp, 69.723_dp, 0.001_dp, 69.723_dp, 0.001_dp, \"\") gallium type( saw_type ), public, parameter :: Gd = saw_type(\"gadolinium\", \"Gd\", 64, nan_dp, nan_dp, 157.25_dp, 0.03_dp, 157.25_dp, 0.03_dp, \"g\") gadolinium type( saw_type ), public, parameter :: Ge = saw_type(\"germanium\", \"Ge\", 32, nan_dp, nan_dp, 72.630_dp, 0.008_dp, 72.630_dp, 0.008_dp, \"\") germanium type( saw_type ), public, parameter :: H = saw_type(\"hydrogen\", \"H\", 1, 1.00784_dp, 1.00811_dp, 1.00798_dp, 8e-05_dp, 1.0080_dp, 0.0002_dp, \"m\") hydrogen type( saw_type ), public, parameter :: He = saw_type(\"helium\", \"He\", 2, nan_dp, nan_dp, 4.002602_dp, 0.000002_dp, 4.0026_dp, 0.0001_dp, \"g r\") helium type( saw_type ), public, parameter :: Hf = saw_type(\"hafnium\", \"Hf\", 72, nan_dp, nan_dp, 178.486_dp, 0.006_dp, 178.49_dp, 0.01_dp, \"g\") hafnium type( saw_type ), public, parameter :: Hg = saw_type(\"mercury\", \"Hg\", 80, nan_dp, nan_dp, 200.592_dp, 0.003_dp, 200.59_dp, 0.01_dp, \"\") mercury type( saw_type ), public, parameter :: Ho = saw_type(\"holmium\", \"Ho\", 67, nan_dp, nan_dp, 164.930329_dp, 0.000005_dp, 164.93_dp, 0.01_dp, \"\") holmium type( saw_type ), public, parameter :: Hs = saw_type(\"hassium\", \"Hs\", 108, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") hassium type( saw_type ), public, parameter :: I = saw_type(\"iodine\", \"I\", 53, nan_dp, nan_dp, 126.90447_dp, 0.00003_dp, 126.90_dp, 0.01_dp, \"\") iodine type( saw_type ), public, parameter :: In = saw_type(\"indium\", \"In\", 49, nan_dp, nan_dp, 114.818_dp, 0.001_dp, 114.82_dp, 0.01_dp, \"\") indium type( saw_type ), public, parameter :: Ir = saw_type(\"iridium\", \"Ir\", 77, nan_dp, nan_dp, 192.217_dp, 0.002_dp, 192.22_dp, 0.01_dp, \"\") iridium type( saw_type ), public, parameter :: K = saw_type(\"potassium\", \"K\", 19, nan_dp, nan_dp, 39.0983_dp, 0.0001_dp, 39.098_dp, 0.001_dp, \"\") potassium type( saw_type ), public, parameter :: Kr = saw_type(\"krypton\", \"Kr\", 36, nan_dp, nan_dp, 83.798_dp, 0.002_dp, 83.798_dp, 0.002_dp, \"g m\") krypton type( saw_type ), public, parameter :: La = saw_type(\"lanthanum\", \"La\", 57, nan_dp, nan_dp, 138.90547_dp, 0.00007_dp, 138.91_dp, 0.01_dp, \"g\") lanthanum type( saw_type ), public, parameter :: Li = saw_type(\"lithium\", \"Li\", 3, 6.938_dp, 6.997_dp, 6.97_dp, 0.02_dp, 6.94_dp, 0.06_dp, \"m\") lithium type( saw_type ), public, parameter :: Lr = saw_type(\"lawrencium\", \"Lr\", 103, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") lawrencium type( saw_type ), public, parameter :: Lu = saw_type(\"lutetium\", \"Lu\", 71, nan_dp, nan_dp, 174.9668_dp, 0.0001_dp, 174.97_dp, 0.01_dp, \"g\") lutetium type( saw_type ), public, parameter :: Lv = saw_type(\"livermorium\", \"Lv\", 116, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") livermorium type( saw_type ), public, parameter :: Mc = saw_type(\"moscovium\", \"Mc\", 115, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") moscovium type( saw_type ), public, parameter :: Md = saw_type(\"mendelevium\", \"Md\", 101, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") mendelevium type( saw_type ), public, parameter :: Mg = saw_type(\"magnesium\", \"Mg\", 12, 24.304_dp, 24.307_dp, 24.3055_dp, 0.0009_dp, 24.305_dp, 0.002_dp, \"\") magnesium type( saw_type ), public, parameter :: Mn = saw_type(\"manganese\", \"Mn\", 25, nan_dp, nan_dp, 54.938043_dp, 0.000002_dp, 54.938_dp, 0.001_dp, \"\") manganese type( saw_type ), public, parameter :: Mo = saw_type(\"molybdenum\", \"Mo\", 42, nan_dp, nan_dp, 95.95_dp, 0.01_dp, 95.95_dp, 0.01_dp, \"g\") molybdenum type( saw_type ), public, parameter :: Mt = saw_type(\"meitnerium\", \"Mt\", 109, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") meitnerium type( saw_type ), public, parameter :: N = saw_type(\"nitrogen\", \"N\", 7, 14.00643_dp, 14.00728_dp, 14.0069_dp, 0.0003_dp, 14.007_dp, 0.001_dp, \"m\") nitrogen type( saw_type ), public, parameter :: Na = saw_type(\"sodium\", \"Na\", 11, nan_dp, nan_dp, 22.98976928_dp, 0.00000002_dp, 22.990_dp, 0.001_dp, \"\") sodium type( saw_type ), public, parameter :: Nb = saw_type(\"nobium\", \"Nb\", 41, nan_dp, nan_dp, 92.90637_dp, 0.00001_dp, 92.906_dp, 0.001_dp, \"\") nobium type( saw_type ), public, parameter :: Nd = saw_type(\"neodymium\", \"Nd\", 60, nan_dp, nan_dp, 144.242_dp, 0.003_dp, 144.24_dp, 0.01_dp, \"g\") neodymium type( saw_type ), public, parameter :: Ne = saw_type(\"neon\", \"Ne\", 10, nan_dp, nan_dp, 20.1797_dp, 0.0006_dp, 20.180_dp, 0.001_dp, \"g m\") neon type( saw_type ), public, parameter :: Nh = saw_type(\"nihonium\", \"Nh\", 113, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") nihonium type( saw_type ), public, parameter :: Ni = saw_type(\"nickel\", \"Ni\", 28, nan_dp, nan_dp, 58.6934_dp, 0.0004_dp, 58.693_dp, 0.001_dp, \"r\") nickel type( saw_type ), public, parameter :: No = saw_type(\"nobelium\", \"No\", 102, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") nobelium type( saw_type ), public, parameter :: Np = saw_type(\"neptunium\", \"Np\", 93, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") neptunium type( saw_type ), public, parameter :: O = saw_type(\"oxygen\", \"O\", 8, 15.99903_dp, 15.99977_dp, 15.9994_dp, 0.0003_dp, 15.999_dp, 0.001_dp, \"m\") oxygen type( saw_type ), public, parameter :: Og = saw_type(\"organesson\", \"Og\", 118, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") organesson type( saw_type ), public, parameter :: Os = saw_type(\"osmium\", \"Os\", 76, nan_dp, nan_dp, 190.23_dp, 0.03_dp, 190.23_dp, 0.03_dp, \"g\") osmium type( saw_type ), public, parameter :: P = saw_type(\"phosphorus\", \"P\", 15, nan_dp, nan_dp, 30.973761998_dp, 0.000000005_dp, 30.974_dp, 0.001_dp, \"\") phosphorus type( saw_type ), public, parameter :: Pa = saw_type(\"protactinium\", \"Pa\", 91, nan_dp, nan_dp, 231.03588_dp, 0.00001_dp, 231.04_dp, 0.01_dp, \"\") protactinium type( saw_type ), public, parameter :: Pb = saw_type(\"lead\", \"Pb\", 82, 206.14_dp, 207.94_dp, 207.0_dp, 0.6_dp, 207.2_dp, 1.1_dp, \"\") lead type( saw_type ), public, parameter :: Pd = saw_type(\"palladium\", \"Pd\", 46, nan_dp, nan_dp, 106.42_dp, 0.01_dp, 106.42_dp, 0.01_dp, \"g\") palladium type( saw_type ), public, parameter :: Pm = saw_type(\"promethium\", \"Pm\", 61, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") promethium type( saw_type ), public, parameter :: Po = saw_type(\"polonium\", \"Po\", 84, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") polonium type( saw_type ), public, parameter :: Pr = saw_type(\"praseodymium\", \"Pr\", 59, nan_dp, nan_dp, 140.90766_dp, 0.00001_dp, 140.91_dp, 0.01_dp, \"\") praseodymium type( saw_type ), public, parameter :: Pt = saw_type(\"platinum\", \"Pt\", 78, nan_dp, nan_dp, 195.084_dp, 0.009_dp, 195.08_dp, 0.02_dp, \"\") platinum type( saw_type ), public, parameter :: Pu = saw_type(\"plutonium\", \"Pu\", 94, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") plutonium type( saw_type ), public, parameter :: Ra = saw_type(\"radium\", \"Ra\", 88, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") radium type( saw_type ), public, parameter :: Rb = saw_type(\"rubidium\", \"Rb\", 37, nan_dp, nan_dp, 85.4678_dp, 0.0003_dp, 85.468_dp, 0.001_dp, \"g\") rubidium type( saw_type ), public, parameter :: Re = saw_type(\"rhenium\", \"Re\", 75, nan_dp, nan_dp, 186.207_dp, 0.001_dp, 186.21_dp, 0.01_dp, \"\") rhenium type( saw_type ), public, parameter :: Rf = saw_type(\"rutherfordium\", \"Rf\", 104, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") rutherfordium type( saw_type ), public, parameter :: Rg = saw_type(\"roentgenium\", \"Rg\", 111, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") roentgenium type( saw_type ), public, parameter :: Rh = saw_type(\"rhodium\", \"Rh\", 45, nan_dp, nan_dp, 102.90549_dp, 0.00002_dp, 102.91_dp, 0.01_dp, \"\") rhodium type( saw_type ), public, parameter :: Rn = saw_type(\"radon\", \"Rn\", 86, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") radon type( saw_type ), public, parameter :: Ru = saw_type(\"ruthenium\", \"Ru\", 44, nan_dp, nan_dp, 101.07_dp, 0.02_dp, 101.07_dp, 0.02_dp, \"g\") ruthenium type( saw_type ), public, parameter :: S = saw_type(\"sulfur\", \"S\", 16, 32.059_dp, 32.076_dp, 32.067_dp, 0.005_dp, 32.06_dp, 0.02_dp, \"\") sulfur type( saw_type ), public, parameter :: Sb = saw_type(\"antimony\", \"Sb\", 51, nan_dp, nan_dp, 121.760_dp, 0.001_dp, 121.76_dp, 0.01_dp, \"g\") antimony type( saw_type ), public, parameter :: Sc = saw_type(\"scandium\", \"Sc\", 21, nan_dp, nan_dp, 44.955907_dp, 0.000004_dp, 44.956_dp, 0.001_dp, \"\") scandium type( saw_type ), public, parameter :: Se = saw_type(\"selenium\", \"Se\", 34, nan_dp, nan_dp, 78.971_dp, 0.008_dp, 78.971_dp, 0.008_dp, \"\") selenium type( saw_type ), public, parameter :: Sg = saw_type(\"seaborgium\", \"Sg\", 106, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") seaborgium type( saw_type ), public, parameter :: Si = saw_type(\"silicon\", \"Si\", 14, 28.084_dp, 28.086_dp, 28.085_dp, 0.0006_dp, 28.085_dp, 0.001_dp, \"\") silicon type( saw_type ), public, parameter :: Sm = saw_type(\"samarium\", \"Sm\", 62, nan_dp, nan_dp, 150.36_dp, 0.02_dp, 150.36_dp, 0.02_dp, \"g\") samarium type( saw_type ), public, parameter :: Sn = saw_type(\"tin\", \"Sn\", 50, nan_dp, nan_dp, 118.70_dp, 0.007_dp, 118.71_dp, 0.01_dp, \"g\") tin type( saw_type ), public, parameter :: Sr = saw_type(\"strontium\", \"Sr\", 38, nan_dp, nan_dp, 87.62_dp, 0.01_dp, 87.62_dp, 0.01_dp, \"g r\") strontium type( saw_type ), public, parameter :: Ta = saw_type(\"tantalum\", \"Ta\", 73, nan_dp, nan_dp, 180.94788_dp, 0.00002_dp, 180.95_dp, 0.01_dp, \"\") tantalum type( saw_type ), public, parameter :: Tb = saw_type(\"terbium\", \"Tb\", 65, nan_dp, nan_dp, 158.925354_dp, 0.000007_dp, 158.93_dp, 0.01_dp, \"\") terbium type( saw_type ), public, parameter :: Tc = saw_type(\"technetium\", \"Tc\", 43, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") technetium type( saw_type ), public, parameter :: Te = saw_type(\"tellurium\", \"Te\", 52, nan_dp, nan_dp, 127.60_dp, 0.03_dp, 127.60_dp, 0.03_dp, \"g\") tellurium type( saw_type ), public, parameter :: Th = saw_type(\"thorium\", \"Th\", 90, nan_dp, nan_dp, 232.0377_dp, 0.0004_dp, 232.04_dp, 0.01_dp, \"\") thorium type( saw_type ), public, parameter :: Ti = saw_type(\"titanium\", \"Ti\", 22, nan_dp, nan_dp, 47.867_dp, 0.001_dp, 47.867_dp, 0.001_dp, \"\") titanium type( saw_type ), public, parameter :: Tl = saw_type(\"thallium\", \"Tl\", 81, 204.382_dp, 204.385_dp, 204.3835_dp, 0.0009_dp, 204.38_dp, 0.01_dp, \"\") thallium type( saw_type ), public, parameter :: Tm = saw_type(\"thulium\", \"Tm\", 69, nan_dp, nan_dp, 168.934219_dp, 0.000005_dp, 168.93_dp, 0.01_dp, \"\") thulium type( saw_type ), public, parameter :: Ts = saw_type(\"tennesine\", \"Ts\", 117, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, nan_dp, \"\") tennesine type( saw_type ), public, parameter :: U = saw_type(\"uranium\", \"U\", 92, nan_dp, nan_dp, 238.02891_dp, 0.00003_dp, 238.03_dp, 0.01_dp, \"g m\") uranium type( saw_type ), public, parameter :: V = saw_type(\"vanadium\", \"V\", 23, nan_dp, nan_dp, 50.9415_dp, 0.0001_dp, 50.942_dp, 0.001_dp, \"\") vanadium type( saw_type ), public, parameter :: W = saw_type(\"tungsten\", \"W\", 74, nan_dp, nan_dp, 183.84_dp, 0.01_dp, 183.84_dp, 0.01_dp, \"\") tungsten type( saw_type ), public, parameter :: Xe = saw_type(\"xenon\", \"Xe\", 54, nan_dp, nan_dp, 131.293_dp, 0.006_dp, 131.29_dp, 0.01_dp, \"g m\") xenon type( saw_type ), public, parameter :: Y = saw_type(\"yttrium\", \"Y\", 39, nan_dp, nan_dp, 88.905838_dp, 0.000002_dp, 88.906_dp, 0.001_dp, \"\") yttrium integer(kind=int32), public, parameter :: YEAR = 2021 Year of release. type( saw_type ), public, parameter :: Yb = saw_type(\"ytterbium\", \"Yb\", 70, nan_dp, nan_dp, 173.045_dp, 0.010_dp, 173.05_dp, 0.02_dp, \"g\") ytterbium type( saw_type ), public, parameter :: Zn = saw_type(\"zinc\", \"Zn\", 30, nan_dp, nan_dp, 65.38_dp, 0.02_dp, 65.38_dp, 0.02_dp, \"r\") zinc type( saw_type ), public, parameter :: Zr = saw_type(\"zirconium\", \"Zr\", 40, nan_dp, nan_dp, 91.224_dp, 0.002_dp, 91.224_dp, 0.002_dp, \"g\") zirconium","tags":"","loc":"module/ciaaw__saw_2021.html"},{"title":"ciaaw__version – ciaaw","text":"Version Used by module~~ciaaw__version~~UsedByGraph module~ciaaw__version ciaaw__version module~capi__version capi__version module~capi__version->module~ciaaw__version module~ciaaw ciaaw module~ciaaw->module~ciaaw__version module~capi capi module~ciaaw->module~capi module~capi->module~capi__version Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Functions public  function get_version () result(fptr) Get the version Arguments None Return Value character(len=:), pointer Fortran pointer to a string indicating the version..","tags":"","loc":"module/ciaaw__version.html"},{"title":"ciaaw – ciaaw","text":"Main module for the Ciaaw library. Uses ciaaw__version capi ciaaw__saw module~~ciaaw~~UsesGraph module~ciaaw ciaaw module~capi capi module~ciaaw->module~capi module~ciaaw__saw ciaaw__saw module~ciaaw->module~ciaaw__saw module~ciaaw__version ciaaw__version module~ciaaw->module~ciaaw__version module~capi__saw capi__saw module~capi->module~capi__saw module~capi__version capi__version module~capi->module~capi__version module~ciaaw__saw_2021 ciaaw__saw_2021 module~ciaaw__saw->module~ciaaw__saw_2021 module~ciaaw__saw_type ciaaw__saw_type module~ciaaw__saw->module~ciaaw__saw_type module~capi__saw_2021 capi__saw_2021 module~capi__saw->module~capi__saw_2021 module~capi__saw_type capi__saw_type module~capi__saw->module~capi__saw_type module~capi__version->module~ciaaw__version iso_c_binding iso_c_binding module~capi__version->iso_c_binding module~ciaaw__saw_2021->module~ciaaw__saw_type stdlib_kinds stdlib_kinds module~ciaaw__saw_2021->stdlib_kinds module~ciaaw__saw_type->stdlib_kinds module~capi__saw_2021->module~ciaaw__saw_2021 module~capi__saw_2021->iso_c_binding module~capi__saw_2021->module~capi__saw_type module~capi__saw_2021->stdlib_kinds module~capi__saw_type->iso_c_binding Help Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs.","tags":"","loc":"module/ciaaw.html"},{"title":"capi_version.f90 – ciaaw","text":"This file depends on sourcefile~~capi_version.f90~~EfferentGraph sourcefile~capi_version.f90 capi_version.f90 sourcefile~ciaaw_version.f90 ciaaw_version.f90 sourcefile~capi_version.f90->sourcefile~ciaaw_version.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~capi_version.f90~~AfferentGraph sourcefile~capi_version.f90 capi_version.f90 sourcefile~capi.f90 capi.f90 sourcefile~capi.f90->sourcefile~capi_version.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module capi__version !! Version: C API. use iso_c_binding , only : c_ptr , c_null_char , c_loc use ciaaw__version , only : get_version implicit none private character ( len = :), allocatable , target :: version_c public :: capi_get_version contains function capi_get_version () bind ( c , name = 'ciaaw_get_version' ) result ( cptr ) !! Get the version implicit none type ( c_ptr ) :: cptr !! C pointer to a string indicating the version. character ( len = :), pointer :: fptr fptr => get_version () if ( allocated ( version_c )) then deallocate ( version_c ) endif allocate ( character ( len = len ( fptr ) + 1 ) :: version_c ) version_c = fptr // c_null_char cptr = c_loc ( version_c ) end function end module capi__version","tags":"","loc":"sourcefile/capi_version.f90.html"},{"title":"capi_saw.f90 – ciaaw","text":"This file depends on sourcefile~~capi_saw.f90~~EfferentGraph sourcefile~capi_saw.f90 capi_saw.f90 sourcefile~capi_saw_2021.f90 capi_saw_2021.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_2021.f90 sourcefile~capi_saw_type.f90 capi_saw_type.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_type.f90 sourcefile~capi_saw_2021.f90->sourcefile~capi_saw_type.f90 sourcefile~ciaaw_saw_2021.f90 ciaaw_saw_2021.f90 sourcefile~capi_saw_2021.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~ciaaw_saw_type.f90 ciaaw_saw_type.f90 sourcefile~ciaaw_saw_2021.f90->sourcefile~ciaaw_saw_type.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~capi_saw.f90~~AfferentGraph sourcefile~capi_saw.f90 capi_saw.f90 sourcefile~capi.f90 capi.f90 sourcefile~capi.f90->sourcefile~capi_saw.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module capi__saw !! SAW module: C API. !! The latest values (2021) do not have the year as a suffix in their name. !! Older values can be used and they feature the year as a suffix in their name. use capi__saw_type use capi__saw_2021 end module capi__saw","tags":"","loc":"sourcefile/capi_saw.f90.html"},{"title":"ciaaw_saw.f90 – ciaaw","text":"This file depends on sourcefile~~ciaaw_saw.f90~~EfferentGraph sourcefile~ciaaw_saw.f90 ciaaw_saw.f90 sourcefile~ciaaw_saw_2021.f90 ciaaw_saw_2021.f90 sourcefile~ciaaw_saw.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~ciaaw_saw_type.f90 ciaaw_saw_type.f90 sourcefile~ciaaw_saw.f90->sourcefile~ciaaw_saw_type.f90 sourcefile~ciaaw_saw_2021.f90->sourcefile~ciaaw_saw_type.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~ciaaw_saw.f90~~AfferentGraph sourcefile~ciaaw_saw.f90 ciaaw_saw.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~ciaaw_saw.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module ciaaw__saw !! SAW module !! The latest values (2021) do not have the year as a suffix in their name. !! Older values can be used and they feature the year as a suffix in their name. use ciaaw__saw_2021 use ciaaw__saw_type end module ciaaw__saw","tags":"","loc":"sourcefile/ciaaw_saw.f90.html"},{"title":"capi.f90 – ciaaw","text":"This file depends on sourcefile~~capi.f90~~EfferentGraph sourcefile~capi.f90 capi.f90 sourcefile~capi_saw.f90 capi_saw.f90 sourcefile~capi.f90->sourcefile~capi_saw.f90 sourcefile~capi_version.f90 capi_version.f90 sourcefile~capi.f90->sourcefile~capi_version.f90 sourcefile~capi_saw_2021.f90 capi_saw_2021.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_2021.f90 sourcefile~capi_saw_type.f90 capi_saw_type.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_type.f90 sourcefile~ciaaw_version.f90 ciaaw_version.f90 sourcefile~capi_version.f90->sourcefile~ciaaw_version.f90 sourcefile~capi_saw_2021.f90->sourcefile~capi_saw_type.f90 sourcefile~ciaaw_saw_2021.f90 ciaaw_saw_2021.f90 sourcefile~capi_saw_2021.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~ciaaw_saw_type.f90 ciaaw_saw_type.f90 sourcefile~ciaaw_saw_2021.f90->sourcefile~ciaaw_saw_type.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~capi.f90~~AfferentGraph sourcefile~capi.f90 capi.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module capi !! Main module for the Ciaaw library: C API. use capi__version use capi__saw end module capi","tags":"","loc":"sourcefile/capi.f90.html"},{"title":"capi_saw_2021.f90 – ciaaw","text":"This file depends on sourcefile~~capi_saw_2021.f90~~EfferentGraph sourcefile~capi_saw_2021.f90 capi_saw_2021.f90 sourcefile~capi_saw_type.f90 capi_saw_type.f90 sourcefile~capi_saw_2021.f90->sourcefile~capi_saw_type.f90 sourcefile~ciaaw_saw_2021.f90 ciaaw_saw_2021.f90 sourcefile~capi_saw_2021.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~ciaaw_saw_type.f90 ciaaw_saw_type.f90 sourcefile~ciaaw_saw_2021.f90->sourcefile~ciaaw_saw_type.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~capi_saw_2021.f90~~AfferentGraph sourcefile~capi_saw_2021.f90 capi_saw_2021.f90 sourcefile~capi_saw.f90 capi_saw.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_2021.f90 sourcefile~capi.f90 capi.f90 sourcefile~capi.f90->sourcefile~capi_saw.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module capi__saw_2021 !! Codata Constants - Autogenerated: C API. use iso_c_binding , only : c_null_char , c_int use stdlib_kinds , only : dp , int32 use ciaaw__saw_2021 use capi__saw_type private integer ( c_int ), protected , public , bind ( C , name = \"ciaaw_saw_YEAR\" ) :: capi_YEAR = YEAR !capi type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_H\" ) :: & capi_0 = capi_saw_type (& [ \"h\" , \"y\" , \"d\" , \"r\" , \"o\" , \"g\" , \"e\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"H\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & H % z , & H % saw_min , & H % saw_max , & H % saw , & H % saw_u , & H % asaw , & H % saw_u , & [ \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_He\" ) :: & capi_1 = capi_saw_type (& [ \"h\" , \"e\" , \"l\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"H\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & He % z , & He % saw_min , & He % saw_max , & He % saw , & He % saw_u , & He % asaw , & He % saw_u , & [ \"g\" , \" \" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Li\" ) :: & capi_2 = capi_saw_type (& [ \"l\" , \"i\" , \"t\" , \"h\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"L\" , \"i\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Li % z , & Li % saw_min , & Li % saw_max , & Li % saw , & Li % saw_u , & Li % asaw , & Li % saw_u , & [ \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Be\" ) :: & capi_3 = capi_saw_type (& [ \"b\" , \"e\" , \"r\" , \"y\" , \"l\" , \"l\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"B\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Be % z , & Be % saw_min , & Be % saw_max , & Be % saw , & Be % saw_u , & Be % asaw , & Be % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_B\" ) :: & capi_4 = capi_saw_type (& [ \"b\" , \"o\" , \"r\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"B\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & B % z , & B % saw_min , & B % saw_max , & B % saw , & B % saw_u , & B % asaw , & B % saw_u , & [ \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_C\" ) :: & capi_5 = capi_saw_type (& [ \"c\" , \"a\" , \"r\" , \"b\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & C % z , & C % saw_min , & C % saw_max , & C % saw , & C % saw_u , & C % asaw , & C % saw_u , & [ \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_N\" ) :: & capi_6 = capi_saw_type (& [ \"n\" , \"i\" , \"t\" , \"r\" , \"o\" , \"g\" , \"e\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & N % z , & N % saw_min , & N % saw_max , & N % saw , & N % saw_u , & N % asaw , & N % saw_u , & [ \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_O\" ) :: & capi_7 = capi_saw_type (& [ \"o\" , \"x\" , \"y\" , \"g\" , \"e\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"O\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & O % z , & O % saw_min , & O % saw_max , & O % saw , & O % saw_u , & O % asaw , & O % saw_u , & [ \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_F\" ) :: & capi_8 = capi_saw_type (& [ \"f\" , \"l\" , \"u\" , \"o\" , \"r\" , \"i\" , \"n\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"F\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & F % z , & F % saw_min , & F % saw_max , & F % saw , & F % saw_u , & F % asaw , & F % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ne\" ) :: & capi_9 = capi_saw_type (& [ \"n\" , \"e\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ne % z , & Ne % saw_min , & Ne % saw_max , & Ne % saw , & Ne % saw_u , & Ne % asaw , & Ne % saw_u , & [ \"g\" , \" \" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Na\" ) :: & capi_10 = capi_saw_type (& [ \"s\" , \"o\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , \"a\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Na % z , & Na % saw_min , & Na % saw_max , & Na % saw , & Na % saw_u , & Na % asaw , & Na % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Mg\" ) :: & capi_11 = capi_saw_type (& [ \"m\" , \"a\" , \"g\" , \"n\" , \"e\" , \"s\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"M\" , \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Mg % z , & Mg % saw_min , & Mg % saw_max , & Mg % saw , & Mg % saw_u , & Mg % asaw , & Mg % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Al\" ) :: & capi_12 = capi_saw_type (& [ \"a\" , \"l\" , \"u\" , \"m\" , \"i\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"A\" , \"l\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Al % z , & Al % saw_min , & Al % saw_max , & Al % saw , & Al % saw_u , & Al % asaw , & Al % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Si\" ) :: & capi_13 = capi_saw_type (& [ \"s\" , \"i\" , \"l\" , \"i\" , \"c\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , \"i\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Si % z , & Si % saw_min , & Si % saw_max , & Si % saw , & Si % saw_u , & Si % asaw , & Si % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_P\" ) :: & capi_14 = capi_saw_type (& [ \"p\" , \"h\" , \"o\" , \"s\" , \"p\" , \"h\" , \"o\" , \"r\" , \"u\" , \"s\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & P % z , & P % saw_min , & P % saw_max , & P % saw , & P % saw_u , & P % asaw , & P % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_S\" ) :: & capi_15 = capi_saw_type (& [ \"s\" , \"u\" , \"l\" , \"f\" , \"u\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & S % z , & S % saw_min , & S % saw_max , & S % saw , & S % saw_u , & S % asaw , & S % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Cl\" ) :: & capi_16 = capi_saw_type (& [ \"c\" , \"h\" , \"l\" , \"o\" , \"r\" , \"i\" , \"n\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"l\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Cl % z , & Cl % saw_min , & Cl % saw_max , & Cl % saw , & Cl % saw_u , & Cl % asaw , & Cl % saw_u , & [ \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ar\" ) :: & capi_17 = capi_saw_type (& [ \"a\" , \"r\" , \"g\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"A\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ar % z , & Ar % saw_min , & Ar % saw_max , & Ar % saw , & Ar % saw_u , & Ar % asaw , & Ar % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_K\" ) :: & capi_18 = capi_saw_type (& [ \"p\" , \"o\" , \"t\" , \"a\" , \"s\" , \"s\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"K\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & K % z , & K % saw_min , & K % saw_max , & K % saw , & K % saw_u , & K % asaw , & K % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ca\" ) :: & capi_19 = capi_saw_type (& [ \"c\" , \"a\" , \"l\" , \"c\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"a\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ca % z , & Ca % saw_min , & Ca % saw_max , & Ca % saw , & Ca % saw_u , & Ca % asaw , & Ca % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Sc\" ) :: & capi_20 = capi_saw_type (& [ \"s\" , \"c\" , \"a\" , \"n\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , \"c\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Sc % z , & Sc % saw_min , & Sc % saw_max , & Sc % saw , & Sc % saw_u , & Sc % asaw , & Sc % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ti\" ) :: & capi_21 = capi_saw_type (& [ \"t\" , \"i\" , \"t\" , \"a\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"i\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ti % z , & Ti % saw_min , & Ti % saw_max , & Ti % saw , & Ti % saw_u , & Ti % asaw , & Ti % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_V\" ) :: & capi_22 = capi_saw_type (& [ \"v\" , \"a\" , \"n\" , \"a\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"V\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & V % z , & V % saw_min , & V % saw_max , & V % saw , & V % saw_u , & V % asaw , & V % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Cr\" ) :: & capi_23 = capi_saw_type (& [ \"c\" , \"h\" , \"r\" , \"o\" , \"m\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Cr % z , & Cr % saw_min , & Cr % saw_max , & Cr % saw , & Cr % saw_u , & Cr % asaw , & Cr % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Mn\" ) :: & capi_24 = capi_saw_type (& [ \"m\" , \"a\" , \"n\" , \"g\" , \"a\" , \"n\" , \"e\" , \"s\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"M\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Mn % z , & Mn % saw_min , & Mn % saw_max , & Mn % saw , & Mn % saw_u , & Mn % asaw , & Mn % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Fe\" ) :: & capi_25 = capi_saw_type (& [ \"i\" , \"r\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"F\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Fe % z , & Fe % saw_min , & Fe % saw_max , & Fe % saw , & Fe % saw_u , & Fe % asaw , & Fe % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Co\" ) :: & capi_26 = capi_saw_type (& [ \"c\" , \"o\" , \"b\" , \"a\" , \"l\" , \"t\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"o\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Co % z , & Co % saw_min , & Co % saw_max , & Co % saw , & Co % saw_u , & Co % asaw , & Co % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ni\" ) :: & capi_27 = capi_saw_type (& [ \"n\" , \"i\" , \"c\" , \"k\" , \"e\" , \"l\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , \"i\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ni % z , & Ni % saw_min , & Ni % saw_max , & Ni % saw , & Ni % saw_u , & Ni % asaw , & Ni % saw_u , & [ \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Cu\" ) :: & capi_28 = capi_saw_type (& [ \"c\" , \"o\" , \"p\" , \"p\" , \"e\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"u\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Cu % z , & Cu % saw_min , & Cu % saw_max , & Cu % saw , & Cu % saw_u , & Cu % asaw , & Cu % saw_u , & [ \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Zn\" ) :: & capi_29 = capi_saw_type (& [ \"z\" , \"i\" , \"n\" , \"c\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"Z\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Zn % z , & Zn % saw_min , & Zn % saw_max , & Zn % saw , & Zn % saw_u , & Zn % asaw , & Zn % saw_u , & [ \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ga\" ) :: & capi_30 = capi_saw_type (& [ \"g\" , \"a\" , \"l\" , \"l\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"G\" , \"a\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ga % z , & Ga % saw_min , & Ga % saw_max , & Ga % saw , & Ga % saw_u , & Ga % asaw , & Ga % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ge\" ) :: & capi_31 = capi_saw_type (& [ \"g\" , \"e\" , \"r\" , \"m\" , \"a\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"G\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ge % z , & Ge % saw_min , & Ge % saw_max , & Ge % saw , & Ge % saw_u , & Ge % asaw , & Ge % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_As\" ) :: & capi_32 = capi_saw_type (& [ \"a\" , \"r\" , \"s\" , \"e\" , \"n\" , \"i\" , \"c\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"A\" , \"s\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & As % z , & As % saw_min , & As % saw_max , & As % saw , & As % saw_u , & As % asaw , & As % saw_u , & [ \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Se\" ) :: & capi_33 = capi_saw_type (& [ \"s\" , \"e\" , \"l\" , \"e\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Se % z , & Se % saw_min , & Se % saw_max , & Se % saw , & Se % saw_u , & Se % asaw , & Se % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Br\" ) :: & capi_34 = capi_saw_type (& [ \"b\" , \"r\" , \"o\" , \"m\" , \"i\" , \"n\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"B\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Br % z , & Br % saw_min , & Br % saw_max , & Br % saw , & Br % saw_u , & Br % asaw , & Br % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Kr\" ) :: & capi_35 = capi_saw_type (& [ \"k\" , \"r\" , \"y\" , \"p\" , \"t\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"K\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Kr % z , & Kr % saw_min , & Kr % saw_max , & Kr % saw , & Kr % saw_u , & Kr % asaw , & Kr % saw_u , & [ \"g\" , \" \" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Rb\" ) :: & capi_36 = capi_saw_type (& [ \"r\" , \"u\" , \"b\" , \"i\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"R\" , \"b\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Rb % z , & Rb % saw_min , & Rb % saw_max , & Rb % saw , & Rb % saw_u , & Rb % asaw , & Rb % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Sr\" ) :: & capi_37 = capi_saw_type (& [ \"s\" , \"t\" , \"r\" , \"o\" , \"n\" , \"t\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Sr % z , & Sr % saw_min , & Sr % saw_max , & Sr % saw , & Sr % saw_u , & Sr % asaw , & Sr % saw_u , & [ \"g\" , \" \" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Y\" ) :: & capi_38 = capi_saw_type (& [ \"y\" , \"t\" , \"t\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"Y\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Y % z , & Y % saw_min , & Y % saw_max , & Y % saw , & Y % saw_u , & Y % asaw , & Y % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Zr\" ) :: & capi_39 = capi_saw_type (& [ \"z\" , \"i\" , \"r\" , \"c\" , \"o\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"Z\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Zr % z , & Zr % saw_min , & Zr % saw_max , & Zr % saw , & Zr % saw_u , & Zr % asaw , & Zr % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Nb\" ) :: & capi_40 = capi_saw_type (& [ \"n\" , \"o\" , \"b\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , \"b\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Nb % z , & Nb % saw_min , & Nb % saw_max , & Nb % saw , & Nb % saw_u , & Nb % asaw , & Nb % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Mo\" ) :: & capi_41 = capi_saw_type (& [ \"m\" , \"o\" , \"l\" , \"y\" , \"b\" , \"d\" , \"e\" , \"n\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"M\" , \"o\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Mo % z , & Mo % saw_min , & Mo % saw_max , & Mo % saw , & Mo % saw_u , & Mo % asaw , & Mo % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Tc\" ) :: & capi_42 = capi_saw_type (& [ \"t\" , \"e\" , \"c\" , \"h\" , \"n\" , \"e\" , \"t\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"c\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Tc % z , & Tc % saw_min , & Tc % saw_max , & Tc % saw , & Tc % saw_u , & Tc % asaw , & Tc % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ru\" ) :: & capi_43 = capi_saw_type (& [ \"r\" , \"u\" , \"t\" , \"h\" , \"e\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"R\" , \"u\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ru % z , & Ru % saw_min , & Ru % saw_max , & Ru % saw , & Ru % saw_u , & Ru % asaw , & Ru % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Rh\" ) :: & capi_44 = capi_saw_type (& [ \"r\" , \"h\" , \"o\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"R\" , \"h\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Rh % z , & Rh % saw_min , & Rh % saw_max , & Rh % saw , & Rh % saw_u , & Rh % asaw , & Rh % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Pd\" ) :: & capi_45 = capi_saw_type (& [ \"p\" , \"a\" , \"l\" , \"l\" , \"a\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , \"d\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Pd % z , & Pd % saw_min , & Pd % saw_max , & Pd % saw , & Pd % saw_u , & Pd % asaw , & Pd % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ag\" ) :: & capi_46 = capi_saw_type (& [ \"s\" , \"i\" , \"l\" , \"v\" , \"e\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"A\" , \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ag % z , & Ag % saw_min , & Ag % saw_max , & Ag % saw , & Ag % saw_u , & Ag % asaw , & Ag % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Cd\" ) :: & capi_47 = capi_saw_type (& [ \"c\" , \"a\" , \"d\" , \"m\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"d\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Cd % z , & Cd % saw_min , & Cd % saw_max , & Cd % saw , & Cd % saw_u , & Cd % asaw , & Cd % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_In\" ) :: & capi_48 = capi_saw_type (& [ \"i\" , \"n\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"I\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & In % z , & In % saw_min , & In % saw_max , & In % saw , & In % saw_u , & In % asaw , & In % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Sn\" ) :: & capi_49 = capi_saw_type (& [ \"t\" , \"i\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Sn % z , & Sn % saw_min , & Sn % saw_max , & Sn % saw , & Sn % saw_u , & Sn % asaw , & Sn % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Sb\" ) :: & capi_50 = capi_saw_type (& [ \"a\" , \"n\" , \"t\" , \"i\" , \"m\" , \"o\" , \"n\" , \"y\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , \"b\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Sb % z , & Sb % saw_min , & Sb % saw_max , & Sb % saw , & Sb % saw_u , & Sb % asaw , & Sb % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Te\" ) :: & capi_51 = capi_saw_type (& [ \"t\" , \"e\" , \"l\" , \"l\" , \"u\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Te % z , & Te % saw_min , & Te % saw_max , & Te % saw , & Te % saw_u , & Te % asaw , & Te % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_I\" ) :: & capi_52 = capi_saw_type (& [ \"i\" , \"o\" , \"d\" , \"i\" , \"n\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"I\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & I % z , & I % saw_min , & I % saw_max , & I % saw , & I % saw_u , & I % asaw , & I % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Xe\" ) :: & capi_53 = capi_saw_type (& [ \"x\" , \"e\" , \"n\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"X\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Xe % z , & Xe % saw_min , & Xe % saw_max , & Xe % saw , & Xe % saw_u , & Xe % asaw , & Xe % saw_u , & [ \"g\" , \" \" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Cs\" ) :: & capi_54 = capi_saw_type (& [ \"c\" , \"a\" , \"e\" , \"s\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"s\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Cs % z , & Cs % saw_min , & Cs % saw_max , & Cs % saw , & Cs % saw_u , & Cs % asaw , & Cs % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ba\" ) :: & capi_55 = capi_saw_type (& [ \"b\" , \"a\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"B\" , \"a\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ba % z , & Ba % saw_min , & Ba % saw_max , & Ba % saw , & Ba % saw_u , & Ba % asaw , & Ba % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_La\" ) :: & capi_56 = capi_saw_type (& [ \"l\" , \"a\" , \"n\" , \"t\" , \"h\" , \"a\" , \"n\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"L\" , \"a\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & La % z , & La % saw_min , & La % saw_max , & La % saw , & La % saw_u , & La % asaw , & La % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ce\" ) :: & capi_57 = capi_saw_type (& [ \"c\" , \"e\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ce % z , & Ce % saw_min , & Ce % saw_max , & Ce % saw , & Ce % saw_u , & Ce % asaw , & Ce % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Pr\" ) :: & capi_58 = capi_saw_type (& [ \"p\" , \"r\" , \"a\" , \"s\" , \"e\" , \"o\" , \"d\" , \"y\" , \"m\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Pr % z , & Pr % saw_min , & Pr % saw_max , & Pr % saw , & Pr % saw_u , & Pr % asaw , & Pr % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Nd\" ) :: & capi_59 = capi_saw_type (& [ \"n\" , \"e\" , \"o\" , \"d\" , \"y\" , \"m\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , \"d\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Nd % z , & Nd % saw_min , & Nd % saw_max , & Nd % saw , & Nd % saw_u , & Nd % asaw , & Nd % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Pm\" ) :: & capi_60 = capi_saw_type (& [ \"p\" , \"r\" , \"o\" , \"m\" , \"e\" , \"t\" , \"h\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Pm % z , & Pm % saw_min , & Pm % saw_max , & Pm % saw , & Pm % saw_u , & Pm % asaw , & Pm % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Sm\" ) :: & capi_61 = capi_saw_type (& [ \"s\" , \"a\" , \"m\" , \"a\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Sm % z , & Sm % saw_min , & Sm % saw_max , & Sm % saw , & Sm % saw_u , & Sm % asaw , & Sm % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Eu\" ) :: & capi_62 = capi_saw_type (& [ \"e\" , \"u\" , \"r\" , \"o\" , \"p\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"E\" , \"u\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Eu % z , & Eu % saw_min , & Eu % saw_max , & Eu % saw , & Eu % saw_u , & Eu % asaw , & Eu % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Gd\" ) :: & capi_63 = capi_saw_type (& [ \"g\" , \"a\" , \"d\" , \"o\" , \"l\" , \"i\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"G\" , \"d\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Gd % z , & Gd % saw_min , & Gd % saw_max , & Gd % saw , & Gd % saw_u , & Gd % asaw , & Gd % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Tb\" ) :: & capi_64 = capi_saw_type (& [ \"t\" , \"e\" , \"r\" , \"b\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"b\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Tb % z , & Tb % saw_min , & Tb % saw_max , & Tb % saw , & Tb % saw_u , & Tb % asaw , & Tb % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Dy\" ) :: & capi_65 = capi_saw_type (& [ \"d\" , \"y\" , \"s\" , \"p\" , \"r\" , \"o\" , \"s\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"D\" , \"y\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Dy % z , & Dy % saw_min , & Dy % saw_max , & Dy % saw , & Dy % saw_u , & Dy % asaw , & Dy % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ho\" ) :: & capi_66 = capi_saw_type (& [ \"h\" , \"o\" , \"l\" , \"m\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"H\" , \"o\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ho % z , & Ho % saw_min , & Ho % saw_max , & Ho % saw , & Ho % saw_u , & Ho % asaw , & Ho % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Er\" ) :: & capi_67 = capi_saw_type (& [ \"e\" , \"r\" , \"b\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"E\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Er % z , & Er % saw_min , & Er % saw_max , & Er % saw , & Er % saw_u , & Er % asaw , & Er % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Tm\" ) :: & capi_68 = capi_saw_type (& [ \"t\" , \"h\" , \"u\" , \"l\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Tm % z , & Tm % saw_min , & Tm % saw_max , & Tm % saw , & Tm % saw_u , & Tm % asaw , & Tm % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Yb\" ) :: & capi_69 = capi_saw_type (& [ \"y\" , \"t\" , \"t\" , \"e\" , \"r\" , \"b\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"Y\" , \"b\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Yb % z , & Yb % saw_min , & Yb % saw_max , & Yb % saw , & Yb % saw_u , & Yb % asaw , & Yb % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Lu\" ) :: & capi_70 = capi_saw_type (& [ \"l\" , \"u\" , \"t\" , \"e\" , \"t\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"L\" , \"u\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Lu % z , & Lu % saw_min , & Lu % saw_max , & Lu % saw , & Lu % saw_u , & Lu % asaw , & Lu % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Hf\" ) :: & capi_71 = capi_saw_type (& [ \"h\" , \"a\" , \"f\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"H\" , \"f\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Hf % z , & Hf % saw_min , & Hf % saw_max , & Hf % saw , & Hf % saw_u , & Hf % asaw , & Hf % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ta\" ) :: & capi_72 = capi_saw_type (& [ \"t\" , \"a\" , \"n\" , \"t\" , \"a\" , \"l\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"a\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ta % z , & Ta % saw_min , & Ta % saw_max , & Ta % saw , & Ta % saw_u , & Ta % asaw , & Ta % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_W\" ) :: & capi_73 = capi_saw_type (& [ \"t\" , \"u\" , \"n\" , \"g\" , \"s\" , \"t\" , \"e\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"W\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & W % z , & W % saw_min , & W % saw_max , & W % saw , & W % saw_u , & W % asaw , & W % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Re\" ) :: & capi_74 = capi_saw_type (& [ \"r\" , \"h\" , \"e\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"R\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Re % z , & Re % saw_min , & Re % saw_max , & Re % saw , & Re % saw_u , & Re % asaw , & Re % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Os\" ) :: & capi_75 = capi_saw_type (& [ \"o\" , \"s\" , \"m\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"O\" , \"s\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Os % z , & Os % saw_min , & Os % saw_max , & Os % saw , & Os % saw_u , & Os % asaw , & Os % saw_u , & [ \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ir\" ) :: & capi_76 = capi_saw_type (& [ \"i\" , \"r\" , \"i\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"I\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ir % z , & Ir % saw_min , & Ir % saw_max , & Ir % saw , & Ir % saw_u , & Ir % asaw , & Ir % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Pt\" ) :: & capi_77 = capi_saw_type (& [ \"p\" , \"l\" , \"a\" , \"t\" , \"i\" , \"n\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , \"t\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Pt % z , & Pt % saw_min , & Pt % saw_max , & Pt % saw , & Pt % saw_u , & Pt % asaw , & Pt % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Au\" ) :: & capi_78 = capi_saw_type (& [ \"g\" , \"o\" , \"l\" , \"d\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"A\" , \"u\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Au % z , & Au % saw_min , & Au % saw_max , & Au % saw , & Au % saw_u , & Au % asaw , & Au % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Hg\" ) :: & capi_79 = capi_saw_type (& [ \"m\" , \"e\" , \"r\" , \"c\" , \"u\" , \"r\" , \"y\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"H\" , \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Hg % z , & Hg % saw_min , & Hg % saw_max , & Hg % saw , & Hg % saw_u , & Hg % asaw , & Hg % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Tl\" ) :: & capi_80 = capi_saw_type (& [ \"t\" , \"h\" , \"a\" , \"l\" , \"l\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"l\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Tl % z , & Tl % saw_min , & Tl % saw_max , & Tl % saw , & Tl % saw_u , & Tl % asaw , & Tl % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Pb\" ) :: & capi_81 = capi_saw_type (& [ \"l\" , \"e\" , \"a\" , \"d\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , \"b\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Pb % z , & Pb % saw_min , & Pb % saw_max , & Pb % saw , & Pb % saw_u , & Pb % asaw , & Pb % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Bi\" ) :: & capi_82 = capi_saw_type (& [ \"b\" , \"i\" , \"s\" , \"m\" , \"u\" , \"t\" , \"h\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"B\" , \"i\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Bi % z , & Bi % saw_min , & Bi % saw_max , & Bi % saw , & Bi % saw_u , & Bi % asaw , & Bi % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Po\" ) :: & capi_83 = capi_saw_type (& [ \"p\" , \"o\" , \"l\" , \"o\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , \"o\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Po % z , & Po % saw_min , & Po % saw_max , & Po % saw , & Po % saw_u , & Po % asaw , & Po % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_At\" ) :: & capi_84 = capi_saw_type (& [ \"a\" , \"s\" , \"t\" , \"a\" , \"t\" , \"i\" , \"n\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"A\" , \"t\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & At % z , & At % saw_min , & At % saw_max , & At % saw , & At % saw_u , & At % asaw , & At % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Rn\" ) :: & capi_85 = capi_saw_type (& [ \"r\" , \"a\" , \"d\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"R\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Rn % z , & Rn % saw_min , & Rn % saw_max , & Rn % saw , & Rn % saw_u , & Rn % asaw , & Rn % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Fr\" ) :: & capi_86 = capi_saw_type (& [ \"f\" , \"r\" , \"a\" , \"n\" , \"c\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"F\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Fr % z , & Fr % saw_min , & Fr % saw_max , & Fr % saw , & Fr % saw_u , & Fr % asaw , & Fr % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ra\" ) :: & capi_87 = capi_saw_type (& [ \"r\" , \"a\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"R\" , \"a\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ra % z , & Ra % saw_min , & Ra % saw_max , & Ra % saw , & Ra % saw_u , & Ra % asaw , & Ra % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ac\" ) :: & capi_88 = capi_saw_type (& [ \"a\" , \"c\" , \"t\" , \"i\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"A\" , \"c\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ac % z , & Ac % saw_min , & Ac % saw_max , & Ac % saw , & Ac % saw_u , & Ac % asaw , & Ac % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Th\" ) :: & capi_89 = capi_saw_type (& [ \"t\" , \"h\" , \"o\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"h\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Th % z , & Th % saw_min , & Th % saw_max , & Th % saw , & Th % saw_u , & Th % asaw , & Th % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Pa\" ) :: & capi_90 = capi_saw_type (& [ \"p\" , \"r\" , \"o\" , \"t\" , \"a\" , \"c\" , \"t\" , \"i\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , \"a\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Pa % z , & Pa % saw_min , & Pa % saw_max , & Pa % saw , & Pa % saw_u , & Pa % asaw , & Pa % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_U\" ) :: & capi_91 = capi_saw_type (& [ \"u\" , \"r\" , \"a\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"U\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & U % z , & U % saw_min , & U % saw_max , & U % saw , & U % saw_u , & U % asaw , & U % saw_u , & [ \"g\" , \" \" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Np\" ) :: & capi_92 = capi_saw_type (& [ \"n\" , \"e\" , \"p\" , \"t\" , \"u\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , \"p\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Np % z , & Np % saw_min , & Np % saw_max , & Np % saw , & Np % saw_u , & Np % asaw , & Np % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Pu\" ) :: & capi_93 = capi_saw_type (& [ \"p\" , \"l\" , \"u\" , \"t\" , \"o\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"P\" , \"u\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Pu % z , & Pu % saw_min , & Pu % saw_max , & Pu % saw , & Pu % saw_u , & Pu % asaw , & Pu % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Am\" ) :: & capi_94 = capi_saw_type (& [ \"a\" , \"m\" , \"e\" , \"r\" , \"i\" , \"c\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"A\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Am % z , & Am % saw_min , & Am % saw_max , & Am % saw , & Am % saw_u , & Am % asaw , & Am % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Cm\" ) :: & capi_95 = capi_saw_type (& [ \"c\" , \"u\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Cm % z , & Cm % saw_min , & Cm % saw_max , & Cm % saw , & Cm % saw_u , & Cm % asaw , & Cm % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Bk\" ) :: & capi_96 = capi_saw_type (& [ \"b\" , \"e\" , \"r\" , \"k\" , \"e\" , \"l\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"B\" , \"k\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Bk % z , & Bk % saw_min , & Bk % saw_max , & Bk % saw , & Bk % saw_u , & Bk % asaw , & Bk % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Cf\" ) :: & capi_97 = capi_saw_type (& [ \"c\" , \"a\" , \"l\" , \"i\" , \"f\" , \"o\" , \"r\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"f\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Cf % z , & Cf % saw_min , & Cf % saw_max , & Cf % saw , & Cf % saw_u , & Cf % asaw , & Cf % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Es\" ) :: & capi_98 = capi_saw_type (& [ \"e\" , \"i\" , \"n\" , \"s\" , \"t\" , \"e\" , \"i\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"E\" , \"s\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Es % z , & Es % saw_min , & Es % saw_max , & Es % saw , & Es % saw_u , & Es % asaw , & Es % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Fm\" ) :: & capi_99 = capi_saw_type (& [ \"f\" , \"e\" , \"r\" , \"m\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"F\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Fm % z , & Fm % saw_min , & Fm % saw_max , & Fm % saw , & Fm % saw_u , & Fm % asaw , & Fm % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Md\" ) :: & capi_100 = capi_saw_type (& [ \"m\" , \"e\" , \"n\" , \"d\" , \"e\" , \"l\" , \"e\" , \"v\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"M\" , \"d\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Md % z , & Md % saw_min , & Md % saw_max , & Md % saw , & Md % saw_u , & Md % asaw , & Md % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_No\" ) :: & capi_101 = capi_saw_type (& [ \"n\" , \"o\" , \"b\" , \"e\" , \"l\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , \"o\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & No % z , & No % saw_min , & No % saw_max , & No % saw , & No % saw_u , & No % asaw , & No % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Lr\" ) :: & capi_102 = capi_saw_type (& [ \"l\" , \"a\" , \"w\" , \"r\" , \"e\" , \"n\" , \"c\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"L\" , \"r\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Lr % z , & Lr % saw_min , & Lr % saw_max , & Lr % saw , & Lr % saw_u , & Lr % asaw , & Lr % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Rf\" ) :: & capi_103 = capi_saw_type (& [ \"r\" , \"u\" , \"t\" , \"h\" , \"e\" , \"r\" , \"f\" , \"o\" , \"r\" , \"d\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"R\" , \"f\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Rf % z , & Rf % saw_min , & Rf % saw_max , & Rf % saw , & Rf % saw_u , & Rf % asaw , & Rf % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Db\" ) :: & capi_104 = capi_saw_type (& [ \"d\" , \"u\" , \"b\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"D\" , \"b\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Db % z , & Db % saw_min , & Db % saw_max , & Db % saw , & Db % saw_u , & Db % asaw , & Db % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Sg\" ) :: & capi_105 = capi_saw_type (& [ \"s\" , \"e\" , \"a\" , \"b\" , \"o\" , \"r\" , \"g\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"S\" , \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Sg % z , & Sg % saw_min , & Sg % saw_max , & Sg % saw , & Sg % saw_u , & Sg % asaw , & Sg % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Bh\" ) :: & capi_106 = capi_saw_type (& [ \"b\" , \"o\" , \"h\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"B\" , \"h\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Bh % z , & Bh % saw_min , & Bh % saw_max , & Bh % saw , & Bh % saw_u , & Bh % asaw , & Bh % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Hs\" ) :: & capi_107 = capi_saw_type (& [ \"h\" , \"a\" , \"s\" , \"s\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"H\" , \"s\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Hs % z , & Hs % saw_min , & Hs % saw_max , & Hs % saw , & Hs % saw_u , & Hs % asaw , & Hs % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Mt\" ) :: & capi_108 = capi_saw_type (& [ \"m\" , \"e\" , \"i\" , \"t\" , \"n\" , \"e\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"M\" , \"t\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Mt % z , & Mt % saw_min , & Mt % saw_max , & Mt % saw , & Mt % saw_u , & Mt % asaw , & Mt % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ds\" ) :: & capi_109 = capi_saw_type (& [ \"d\" , \"a\" , \"r\" , \"m\" , \"s\" , \"t\" , \"a\" , \"d\" , \"t\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"D\" , \"s\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ds % z , & Ds % saw_min , & Ds % saw_max , & Ds % saw , & Ds % saw_u , & Ds % asaw , & Ds % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Rg\" ) :: & capi_110 = capi_saw_type (& [ \"r\" , \"o\" , \"e\" , \"n\" , \"t\" , \"g\" , \"e\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"R\" , \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Rg % z , & Rg % saw_min , & Rg % saw_max , & Rg % saw , & Rg % saw_u , & Rg % asaw , & Rg % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Cn\" ) :: & capi_111 = capi_saw_type (& [ \"c\" , \"o\" , \"p\" , \"e\" , \"r\" , \"n\" , \"i\" , \"c\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"C\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Cn % z , & Cn % saw_min , & Cn % saw_max , & Cn % saw , & Cn % saw_u , & Cn % asaw , & Cn % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Nh\" ) :: & capi_112 = capi_saw_type (& [ \"n\" , \"i\" , \"h\" , \"o\" , \"n\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"N\" , \"h\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Nh % z , & Nh % saw_min , & Nh % saw_max , & Nh % saw , & Nh % saw_u , & Nh % asaw , & Nh % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Fl\" ) :: & capi_113 = capi_saw_type (& [ \"f\" , \"l\" , \"e\" , \"r\" , \"o\" , \"v\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"F\" , \"l\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Fl % z , & Fl % saw_min , & Fl % saw_max , & Fl % saw , & Fl % saw_u , & Fl % asaw , & Fl % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Mc\" ) :: & capi_114 = capi_saw_type (& [ \"m\" , \"o\" , \"s\" , \"c\" , \"o\" , \"v\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"M\" , \"c\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Mc % z , & Mc % saw_min , & Mc % saw_max , & Mc % saw , & Mc % saw_u , & Mc % asaw , & Mc % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Lv\" ) :: & capi_115 = capi_saw_type (& [ \"l\" , \"i\" , \"v\" , \"e\" , \"r\" , \"m\" , \"o\" , \"r\" , \"i\" , \"u\" , \"m\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"L\" , \"v\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Lv % z , & Lv % saw_min , & Lv % saw_max , & Lv % saw , & Lv % saw_u , & Lv % asaw , & Lv % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Ts\" ) :: & capi_116 = capi_saw_type (& [ \"t\" , \"e\" , \"n\" , \"n\" , \"e\" , \"s\" , \"i\" , \"n\" , \"e\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"T\" , \"s\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Ts % z , & Ts % saw_min , & Ts % saw_max , & Ts % saw , & Ts % saw_u , & Ts % asaw , & Ts % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) type ( capi_saw_type ), protected , public , bind ( C , name = \"ciaaw_saw_Og\" ) :: & capi_117 = capi_saw_type (& [ \"o\" , \"r\" , \"g\" , \"a\" , \"n\" , \"e\" , \"s\" , \"s\" , \"o\" , \"n\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & [ \"O\" , \"g\" , c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ], & Og % z , & Og % saw_min , & Og % saw_max , & Og % saw , & Og % saw_u , & Og % asaw , & Og % saw_u , & [ c_null_char , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" , \" \" ]) end module capi__saw_2021","tags":"","loc":"sourcefile/capi_saw_2021.f90.html"},{"title":"ciaaw_saw_type.f90 – ciaaw","text":"Files dependent on this one sourcefile~~ciaaw_saw_type.f90~~AfferentGraph sourcefile~ciaaw_saw_type.f90 ciaaw_saw_type.f90 sourcefile~ciaaw_saw.f90 ciaaw_saw.f90 sourcefile~ciaaw_saw.f90->sourcefile~ciaaw_saw_type.f90 sourcefile~ciaaw_saw_2021.f90 ciaaw_saw_2021.f90 sourcefile~ciaaw_saw.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~ciaaw_saw_2021.f90->sourcefile~ciaaw_saw_type.f90 sourcefile~capi_saw_2021.f90 capi_saw_2021.f90 sourcefile~capi_saw_2021.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~ciaaw_saw.f90 sourcefile~capi.f90 capi.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 sourcefile~capi_saw.f90 capi_saw.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_2021.f90 sourcefile~capi.f90->sourcefile~capi_saw.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module ciaaw__saw_type !! Derived types for Standard Atomic Weights. use stdlib_kinds , only : dp , int32 implicit none private type , public :: saw_type !! Derived type representing the saw of an element. character ( len = 24 ) :: element !! Element name. character ( len = 8 ) :: symbol !! Element symbol. integer ( int32 ) :: z !! Element atomic number. real ( dp ) :: saw_min !! Min standard atomic weight. real ( dp ) :: saw_max !! Max standard atomic weight. real ( dp ) :: saw !! Value standard atomic weight. real ( dp ) :: saw_u !! Uncertainty standard atomic weight. real ( dp ) :: asaw !! Abridged value standard atomic weight. real ( dp ) :: asaw_u !! Abridged uncertainty standard atomic weight. character ( len = 8 ) :: footnotes !! Footnotes end type end module ciaaw__saw_type","tags":"","loc":"sourcefile/ciaaw_saw_type.f90.html"},{"title":"capi_saw_type.f90 – ciaaw","text":"Files dependent on this one sourcefile~~capi_saw_type.f90~~AfferentGraph sourcefile~capi_saw_type.f90 capi_saw_type.f90 sourcefile~capi_saw.f90 capi_saw.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_type.f90 sourcefile~capi_saw_2021.f90 capi_saw_2021.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_2021.f90 sourcefile~capi_saw_2021.f90->sourcefile~capi_saw_type.f90 sourcefile~capi.f90 capi.f90 sourcefile~capi.f90->sourcefile~capi_saw.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module capi__saw_type !! Ciaaw saw type: C API. use iso_c_binding , only : c_char , c_double , c_int implicit none private type , public , bind ( C ) :: capi_saw_type !! Derived type representing an element in C. character ( kind = c_char ) :: element ( 25 ) !! Element name. character ( kind = c_char ) :: symbol ( 9 ) !! Element symbol. integer ( c_int ) :: z !! Element atomic number. real ( c_double ) :: saw_min !! Min standard atomic weight. real ( c_double ) :: saw_max !! Max standard atomic weight. real ( c_double ) :: saw !! Value standard atomic weight. real ( c_double ) :: saw_u !! Uncertainty standard atomic weight. real ( c_double ) :: asaw !! Abridged value standard atomic weight. real ( c_double ) :: asaw_u !! Abridged uncertainty standard atomic weight. character ( kind = c_char ) :: footnotes ( 9 ) !! Footnotes end type end module capi__saw_type","tags":"","loc":"sourcefile/capi_saw_type.f90.html"},{"title":"ciaaw_saw_2021.f90 – ciaaw","text":"This file depends on sourcefile~~ciaaw_saw_2021.f90~~EfferentGraph sourcefile~ciaaw_saw_2021.f90 ciaaw_saw_2021.f90 sourcefile~ciaaw_saw_type.f90 ciaaw_saw_type.f90 sourcefile~ciaaw_saw_2021.f90->sourcefile~ciaaw_saw_type.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~ciaaw_saw_2021.f90~~AfferentGraph sourcefile~ciaaw_saw_2021.f90 ciaaw_saw_2021.f90 sourcefile~capi_saw_2021.f90 capi_saw_2021.f90 sourcefile~capi_saw_2021.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~ciaaw_saw.f90 ciaaw_saw.f90 sourcefile~ciaaw_saw.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~capi_saw.f90 capi_saw.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_2021.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~ciaaw_saw.f90 sourcefile~capi.f90 capi.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 sourcefile~capi.f90->sourcefile~capi_saw.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module ciaaw__saw_2021 !! Ciaaw saw - Autogenerated use stdlib_kinds , only : dp , int32 , int64 use ciaaw__saw_type private integer ( int64 ), parameter :: x = 1 real ( dp ), parameter :: nan_dp = transfer ( huge ( x ), 1.0_dp ) integer ( int32 ), parameter , public :: YEAR = 2021 !! Year of release. type ( saw_type ), parameter , public :: H = & saw_type ( \"hydrogen\" , \"H\" , 1 , & 1.00784_dp , 1.00811_dp , 1.00798_dp , 8e-05_dp , & 1.0080_dp , 0.0002_dp , \"m\" ) !! hydrogen type ( saw_type ), parameter , public :: He = & saw_type ( \"helium\" , \"He\" , 2 , & nan_dp , nan_dp , 4.002602_dp , 0.000002_dp , & 4.0026_dp , 0.0001_dp , \"g r\" ) !! helium type ( saw_type ), parameter , public :: Li = & saw_type ( \"lithium\" , \"Li\" , 3 , & 6.938_dp , 6.997_dp , 6.97_dp , 0.02_dp , & 6.94_dp , 0.06_dp , \"m\" ) !! lithium type ( saw_type ), parameter , public :: Be = & saw_type ( \"beryllium\" , \"Be\" , 4 , & nan_dp , nan_dp , 9.0121831_dp , 0.0000005_dp , & 9.0122_dp , 0.00001_dp , \"\" ) !! beryllium type ( saw_type ), parameter , public :: B = & saw_type ( \"boron\" , \"B\" , 5 , & 1 0.806_dp , 1 0.821_dp , 1 0.813_dp , 0.005_dp , & 1 0.81_dp , 0.02_dp , \"m\" ) !! boron type ( saw_type ), parameter , public :: C = & saw_type ( \"carbon\" , \"C\" , 6 , & 1 2.0096_dp , 1 2.0116_dp , 1 2.0106_dp , 0.0006_dp , & 1 2.011_dp , 0.002_dp , \"m\" ) !! carbon type ( saw_type ), parameter , public :: N = & saw_type ( \"nitrogen\" , \"N\" , 7 , & 1 4.00643_dp , 1 4.00728_dp , 1 4.0069_dp , 0.0003_dp , & 1 4.007_dp , 0.001_dp , \"m\" ) !! nitrogen type ( saw_type ), parameter , public :: O = & saw_type ( \"oxygen\" , \"O\" , 8 , & 1 5.99903_dp , 1 5.99977_dp , 1 5.9994_dp , 0.0003_dp , & 1 5.999_dp , 0.001_dp , \"m\" ) !! oxygen type ( saw_type ), parameter , public :: F = & saw_type ( \"fluorine\" , \"F\" , 9 , & nan_dp , nan_dp , 1 8.998403162_dp , 0.000000005_dp , & 1 8.998_dp , 0.001_dp , \"\" ) !! fluorine type ( saw_type ), parameter , public :: Ne = & saw_type ( \"neon\" , \"Ne\" , 10 , & nan_dp , nan_dp , 2 0.1797_dp , 0.0006_dp , & 2 0.180_dp , 0.001_dp , \"g m\" ) !! neon type ( saw_type ), parameter , public :: Na = & saw_type ( \"sodium\" , \"Na\" , 11 , & nan_dp , nan_dp , 2 2.98976928_dp , 0.00000002_dp , & 2 2.990_dp , 0.001_dp , \"\" ) !! sodium type ( saw_type ), parameter , public :: Mg = & saw_type ( \"magnesium\" , \"Mg\" , 12 , & 2 4.304_dp , 2 4.307_dp , 2 4.3055_dp , 0.0009_dp , & 2 4.305_dp , 0.002_dp , \"\" ) !! magnesium type ( saw_type ), parameter , public :: Al = & saw_type ( \"aluminium\" , \"Al\" , 13 , & nan_dp , nan_dp , 2 6.9815384_dp , 0.0000003_dp , & 2 6.982_dp , 0.001_dp , \"\" ) !! aluminium type ( saw_type ), parameter , public :: Si = & saw_type ( \"silicon\" , \"Si\" , 14 , & 2 8.084_dp , 2 8.086_dp , 2 8.085_dp , 0.0006_dp , & 2 8.085_dp , 0.001_dp , \"\" ) !! silicon type ( saw_type ), parameter , public :: P = & saw_type ( \"phosphorus\" , \"P\" , 15 , & nan_dp , nan_dp , 3 0.973761998_dp , 0.000000005_dp , & 3 0.974_dp , 0.001_dp , \"\" ) !! phosphorus type ( saw_type ), parameter , public :: S = & saw_type ( \"sulfur\" , \"S\" , 16 , & 3 2.059_dp , 3 2.076_dp , 3 2.067_dp , 0.005_dp , & 3 2.06_dp , 0.02_dp , \"\" ) !! sulfur type ( saw_type ), parameter , public :: Cl = & saw_type ( \"chlorine\" , \"Cl\" , 17 , & 3 5.446_dp , 3 5.457_dp , 3 5.451_dp , 0.004_dp , & 3 5.45_dp , 0.01_dp , \"m\" ) !! chlorine type ( saw_type ), parameter , public :: Ar = & saw_type ( \"argon\" , \"Ar\" , 18 , & 3 9.792_dp , 3 9.963_dp , 3 9.88_dp , 0.05_dp , & 3 9.95_dp , 0.16_dp , \"\" ) !! argon type ( saw_type ), parameter , public :: K = & saw_type ( \"potassium\" , \"K\" , 19 , & nan_dp , nan_dp , 3 9.0983_dp , 0.0001_dp , & 3 9.098_dp , 0.001_dp , \"\" ) !! potassium type ( saw_type ), parameter , public :: Ca = & saw_type ( \"calcium\" , \"Ca\" , 20 , & nan_dp , nan_dp , 4 0.078_dp , 0.004_dp , & 4 0.078_dp , 0.004_dp , \"g\" ) !! calcium type ( saw_type ), parameter , public :: Sc = & saw_type ( \"scandium\" , \"Sc\" , 21 , & nan_dp , nan_dp , 4 4.955907_dp , 0.000004_dp , & 4 4.956_dp , 0.001_dp , \"\" ) !! scandium type ( saw_type ), parameter , public :: Ti = & saw_type ( \"titanium\" , \"Ti\" , 22 , & nan_dp , nan_dp , 4 7.867_dp , 0.001_dp , & 4 7.867_dp , 0.001_dp , \"\" ) !! titanium type ( saw_type ), parameter , public :: V = & saw_type ( \"vanadium\" , \"V\" , 23 , & nan_dp , nan_dp , 5 0.9415_dp , 0.0001_dp , & 5 0.942_dp , 0.001_dp , \"\" ) !! vanadium type ( saw_type ), parameter , public :: Cr = & saw_type ( \"chromium\" , \"Cr\" , 24 , & nan_dp , nan_dp , 5 1.9961_dp , 0.0006_dp , & 5 1.996_dp , 0.001_dp , \"\" ) !! chromium type ( saw_type ), parameter , public :: Mn = & saw_type ( \"manganese\" , \"Mn\" , 25 , & nan_dp , nan_dp , 5 4.938043_dp , 0.000002_dp , & 5 4.938_dp , 0.001_dp , \"\" ) !! manganese type ( saw_type ), parameter , public :: Fe = & saw_type ( \"iron\" , \"Fe\" , 26 , & nan_dp , nan_dp , 5 5.845_dp , 0.002_dp , & 5 5.845_dp , 0.002_dp , \"\" ) !! iron type ( saw_type ), parameter , public :: Co = & saw_type ( \"cobalt\" , \"Co\" , 27 , & nan_dp , nan_dp , 5 8.933194_dp , 0.000003_dp , & 5 8.933_dp , 0.001_dp , \"\" ) !! cobalt type ( saw_type ), parameter , public :: Ni = & saw_type ( \"nickel\" , \"Ni\" , 28 , & nan_dp , nan_dp , 5 8.6934_dp , 0.0004_dp , & 5 8.693_dp , 0.001_dp , \"r\" ) !! nickel type ( saw_type ), parameter , public :: Cu = & saw_type ( \"copper\" , \"Cu\" , 29 , & nan_dp , nan_dp , 6 3.546_dp , 0.003_dp , & 6 3.546_dp , 0.003_dp , \"r\" ) !! copper type ( saw_type ), parameter , public :: Zn = & saw_type ( \"zinc\" , \"Zn\" , 30 , & nan_dp , nan_dp , 6 5.38_dp , 0.02_dp , & 6 5.38_dp , 0.02_dp , \"r\" ) !! zinc type ( saw_type ), parameter , public :: Ga = & saw_type ( \"gallium\" , \"Ga\" , 31 , & nan_dp , nan_dp , 6 9.723_dp , 0.001_dp , & 6 9.723_dp , 0.001_dp , \"\" ) !! gallium type ( saw_type ), parameter , public :: Ge = & saw_type ( \"germanium\" , \"Ge\" , 32 , & nan_dp , nan_dp , 7 2.630_dp , 0.008_dp , & 7 2.630_dp , 0.008_dp , \"\" ) !! germanium type ( saw_type ), parameter , public :: As = & saw_type ( \"arsenic\" , \"As\" , 33 , & nan_dp , nan_dp , 7 4.921595_dp , 0.000006_dp , & 7 4.922_dp , 0.001_dp , \"r\" ) !! arsenic type ( saw_type ), parameter , public :: Se = & saw_type ( \"selenium\" , \"Se\" , 34 , & nan_dp , nan_dp , 7 8.971_dp , 0.008_dp , & 7 8.971_dp , 0.008_dp , \"\" ) !! selenium type ( saw_type ), parameter , public :: Br = & saw_type ( \"bromine\" , \"Br\" , 35 , & 7 9.901_dp , 7 9.907_dp , 7 9.904_dp , 0.002_dp , & 7 9.904_dp , 0.003_dp , \"\" ) !! bromine type ( saw_type ), parameter , public :: Kr = & saw_type ( \"krypton\" , \"Kr\" , 36 , & nan_dp , nan_dp , 8 3.798_dp , 0.002_dp , & 8 3.798_dp , 0.002_dp , \"g m\" ) !! krypton type ( saw_type ), parameter , public :: Rb = & saw_type ( \"rubidium\" , \"Rb\" , 37 , & nan_dp , nan_dp , 8 5.4678_dp , 0.0003_dp , & 8 5.468_dp , 0.001_dp , \"g\" ) !! rubidium type ( saw_type ), parameter , public :: Sr = & saw_type ( \"strontium\" , \"Sr\" , 38 , & nan_dp , nan_dp , 8 7.62_dp , 0.01_dp , & 8 7.62_dp , 0.01_dp , \"g r\" ) !! strontium type ( saw_type ), parameter , public :: Y = & saw_type ( \"yttrium\" , \"Y\" , 39 , & nan_dp , nan_dp , 8 8.905838_dp , 0.000002_dp , & 8 8.906_dp , 0.001_dp , \"\" ) !! yttrium type ( saw_type ), parameter , public :: Zr = & saw_type ( \"zirconium\" , \"Zr\" , 40 , & nan_dp , nan_dp , 9 1.224_dp , 0.002_dp , & 9 1.224_dp , 0.002_dp , \"g\" ) !! zirconium type ( saw_type ), parameter , public :: Nb = & saw_type ( \"nobium\" , \"Nb\" , 41 , & nan_dp , nan_dp , 9 2.90637_dp , 0.00001_dp , & 9 2.906_dp , 0.001_dp , \"\" ) !! nobium type ( saw_type ), parameter , public :: Mo = & saw_type ( \"molybdenum\" , \"Mo\" , 42 , & nan_dp , nan_dp , 9 5.95_dp , 0.01_dp , & 9 5.95_dp , 0.01_dp , \"g\" ) !! molybdenum type ( saw_type ), parameter , public :: Tc = & saw_type ( \"technetium\" , \"Tc\" , 43 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! technetium type ( saw_type ), parameter , public :: Ru = & saw_type ( \"ruthenium\" , \"Ru\" , 44 , & nan_dp , nan_dp , 10 1.07_dp , 0.02_dp , & 10 1.07_dp , 0.02_dp , \"g\" ) !! ruthenium type ( saw_type ), parameter , public :: Rh = & saw_type ( \"rhodium\" , \"Rh\" , 45 , & nan_dp , nan_dp , 10 2.90549_dp , 0.00002_dp , & 10 2.91_dp , 0.01_dp , \"\" ) !! rhodium type ( saw_type ), parameter , public :: Pd = & saw_type ( \"palladium\" , \"Pd\" , 46 , & nan_dp , nan_dp , 10 6.42_dp , 0.01_dp , & 10 6.42_dp , 0.01_dp , \"g\" ) !! palladium type ( saw_type ), parameter , public :: Ag = & saw_type ( \"silver\" , \"Ag\" , 47 , & nan_dp , nan_dp , 10 7.8682_dp , 0.0002_dp , & 10 7.87_dp , 0.01_dp , \"g\" ) !! silver type ( saw_type ), parameter , public :: Cd = & saw_type ( \"cadmium\" , \"Cd\" , 48 , & nan_dp , nan_dp , 11 2.414_dp , 0.004_dp , & 11 2.41_dp , 0.01_dp , \"g\" ) !! cadmium type ( saw_type ), parameter , public :: In = & saw_type ( \"indium\" , \"In\" , 49 , & nan_dp , nan_dp , 11 4.818_dp , 0.001_dp , & 11 4.82_dp , 0.01_dp , \"\" ) !! indium type ( saw_type ), parameter , public :: Sn = & saw_type ( \"tin\" , \"Sn\" , 50 , & nan_dp , nan_dp , 11 8.70_dp , 0.007_dp , & 11 8.71_dp , 0.01_dp , \"g\" ) !! tin type ( saw_type ), parameter , public :: Sb = & saw_type ( \"antimony\" , \"Sb\" , 51 , & nan_dp , nan_dp , 12 1.760_dp , 0.001_dp , & 12 1.76_dp , 0.01_dp , \"g\" ) !! antimony type ( saw_type ), parameter , public :: Te = & saw_type ( \"tellurium\" , \"Te\" , 52 , & nan_dp , nan_dp , 12 7.60_dp , 0.03_dp , & 12 7.60_dp , 0.03_dp , \"g\" ) !! tellurium type ( saw_type ), parameter , public :: I = & saw_type ( \"iodine\" , \"I\" , 53 , & nan_dp , nan_dp , 12 6.90447_dp , 0.00003_dp , & 12 6.90_dp , 0.01_dp , \"\" ) !! iodine type ( saw_type ), parameter , public :: Xe = & saw_type ( \"xenon\" , \"Xe\" , 54 , & nan_dp , nan_dp , 13 1.293_dp , 0.006_dp , & 13 1.29_dp , 0.01_dp , \"g m\" ) !! xenon type ( saw_type ), parameter , public :: Cs = & saw_type ( \"caesium\" , \"Cs\" , 55 , & nan_dp , nan_dp , 13 2.90545196_dp , 0.00000006_dp , & 13 2.91_dp , 0.01_dp , \"\" ) !! caesium type ( saw_type ), parameter , public :: Ba = & saw_type ( \"barium\" , \"Ba\" , 56 , & nan_dp , nan_dp , 13 7.327_dp , 0.007_dp , & 13 7.33_dp , 0.01_dp , \"\" ) !! barium type ( saw_type ), parameter , public :: La = & saw_type ( \"lanthanum\" , \"La\" , 57 , & nan_dp , nan_dp , 13 8.90547_dp , 0.00007_dp , & 13 8.91_dp , 0.01_dp , \"g\" ) !! lanthanum type ( saw_type ), parameter , public :: Ce = & saw_type ( \"cerium\" , \"Ce\" , 58 , & nan_dp , nan_dp , 14 0.116_dp , 0.001_dp , & 14 0.12_dp , 0.01_dp , \"g\" ) !! cerium type ( saw_type ), parameter , public :: Pr = & saw_type ( \"praseodymium\" , \"Pr\" , 59 , & nan_dp , nan_dp , 14 0.90766_dp , 0.00001_dp , & 14 0.91_dp , 0.01_dp , \"\" ) !! praseodymium type ( saw_type ), parameter , public :: Nd = & saw_type ( \"neodymium\" , \"Nd\" , 60 , & nan_dp , nan_dp , 14 4.242_dp , 0.003_dp , & 14 4.24_dp , 0.01_dp , \"g\" ) !! neodymium type ( saw_type ), parameter , public :: Pm = & saw_type ( \"promethium\" , \"Pm\" , 61 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! promethium type ( saw_type ), parameter , public :: Sm = & saw_type ( \"samarium\" , \"Sm\" , 62 , & nan_dp , nan_dp , 15 0.36_dp , 0.02_dp , & 15 0.36_dp , 0.02_dp , \"g\" ) !! samarium type ( saw_type ), parameter , public :: Eu = & saw_type ( \"europium\" , \"Eu\" , 63 , & nan_dp , nan_dp , 15 1.964_dp , 0.001_dp , & 15 1.96_dp , 0.01_dp , \"g\" ) !! europium type ( saw_type ), parameter , public :: Gd = & saw_type ( \"gadolinium\" , \"Gd\" , 64 , & nan_dp , nan_dp , 15 7.25_dp , 0.03_dp , & 15 7.25_dp , 0.03_dp , \"g\" ) !! gadolinium type ( saw_type ), parameter , public :: Tb = & saw_type ( \"terbium\" , \"Tb\" , 65 , & nan_dp , nan_dp , 15 8.925354_dp , 0.000007_dp , & 15 8.93_dp , 0.01_dp , \"\" ) !! terbium type ( saw_type ), parameter , public :: Dy = & saw_type ( \"dysprosium\" , \"Dy\" , 66 , & nan_dp , nan_dp , 16 2.500_dp , 0.001_dp , & 16 2.50_dp , 0.01_dp , \"g\" ) !! dysprosium type ( saw_type ), parameter , public :: Ho = & saw_type ( \"holmium\" , \"Ho\" , 67 , & nan_dp , nan_dp , 16 4.930329_dp , 0.000005_dp , & 16 4.93_dp , 0.01_dp , \"\" ) !! holmium type ( saw_type ), parameter , public :: Er = & saw_type ( \"erbium\" , \"Er\" , 68 , & nan_dp , nan_dp , 16 7.259_dp , 0.003_dp , & 16 7.26_dp , 0.01_dp , \"g\" ) !! erbium type ( saw_type ), parameter , public :: Tm = & saw_type ( \"thulium\" , \"Tm\" , 69 , & nan_dp , nan_dp , 16 8.934219_dp , 0.000005_dp , & 16 8.93_dp , 0.01_dp , \"\" ) !! thulium type ( saw_type ), parameter , public :: Yb = & saw_type ( \"ytterbium\" , \"Yb\" , 70 , & nan_dp , nan_dp , 17 3.045_dp , 0.010_dp , & 17 3.05_dp , 0.02_dp , \"g\" ) !! ytterbium type ( saw_type ), parameter , public :: Lu = & saw_type ( \"lutetium\" , \"Lu\" , 71 , & nan_dp , nan_dp , 17 4.9668_dp , 0.0001_dp , & 17 4.97_dp , 0.01_dp , \"g\" ) !! lutetium type ( saw_type ), parameter , public :: Hf = & saw_type ( \"hafnium\" , \"Hf\" , 72 , & nan_dp , nan_dp , 17 8.486_dp , 0.006_dp , & 17 8.49_dp , 0.01_dp , \"g\" ) !! hafnium type ( saw_type ), parameter , public :: Ta = & saw_type ( \"tantalum\" , \"Ta\" , 73 , & nan_dp , nan_dp , 18 0.94788_dp , 0.00002_dp , & 18 0.95_dp , 0.01_dp , \"\" ) !! tantalum type ( saw_type ), parameter , public :: W = & saw_type ( \"tungsten\" , \"W\" , 74 , & nan_dp , nan_dp , 18 3.84_dp , 0.01_dp , & 18 3.84_dp , 0.01_dp , \"\" ) !! tungsten type ( saw_type ), parameter , public :: Re = & saw_type ( \"rhenium\" , \"Re\" , 75 , & nan_dp , nan_dp , 18 6.207_dp , 0.001_dp , & 18 6.21_dp , 0.01_dp , \"\" ) !! rhenium type ( saw_type ), parameter , public :: Os = & saw_type ( \"osmium\" , \"Os\" , 76 , & nan_dp , nan_dp , 19 0.23_dp , 0.03_dp , & 19 0.23_dp , 0.03_dp , \"g\" ) !! osmium type ( saw_type ), parameter , public :: Ir = & saw_type ( \"iridium\" , \"Ir\" , 77 , & nan_dp , nan_dp , 19 2.217_dp , 0.002_dp , & 19 2.22_dp , 0.01_dp , \"\" ) !! iridium type ( saw_type ), parameter , public :: Pt = & saw_type ( \"platinum\" , \"Pt\" , 78 , & nan_dp , nan_dp , 19 5.084_dp , 0.009_dp , & 19 5.08_dp , 0.02_dp , \"\" ) !! platinum type ( saw_type ), parameter , public :: Au = & saw_type ( \"gold\" , \"Au\" , 79 , & nan_dp , nan_dp , 19 6.966570_dp , 0.000004_dp , & 19 6.97_dp , 0.01_dp , \"\" ) !! gold type ( saw_type ), parameter , public :: Hg = & saw_type ( \"mercury\" , \"Hg\" , 80 , & nan_dp , nan_dp , 20 0.592_dp , 0.003_dp , & 20 0.59_dp , 0.01_dp , \"\" ) !! mercury type ( saw_type ), parameter , public :: Tl = & saw_type ( \"thallium\" , \"Tl\" , 81 , & 20 4.382_dp , 20 4.385_dp , 20 4.3835_dp , 0.0009_dp , & 20 4.38_dp , 0.01_dp , \"\" ) !! thallium type ( saw_type ), parameter , public :: Pb = & saw_type ( \"lead\" , \"Pb\" , 82 , & 20 6.14_dp , 20 7.94_dp , 20 7.0_dp , 0.6_dp , & 20 7.2_dp , 1.1_dp , \"\" ) !! lead type ( saw_type ), parameter , public :: Bi = & saw_type ( \"bismuth\" , \"Bi\" , 83 , & nan_dp , nan_dp , 20 8.98040_dp , 0.00001_dp , & 20 8.98_dp , 0.01_dp , \"\" ) !! bismuth type ( saw_type ), parameter , public :: Po = & saw_type ( \"polonium\" , \"Po\" , 84 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! polonium type ( saw_type ), parameter , public :: At = & saw_type ( \"astatine\" , \"At\" , 85 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! astatine type ( saw_type ), parameter , public :: Rn = & saw_type ( \"radon\" , \"Rn\" , 86 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! radon type ( saw_type ), parameter , public :: Fr = & saw_type ( \"francium\" , \"Fr\" , 87 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! francium type ( saw_type ), parameter , public :: Ra = & saw_type ( \"radium\" , \"Ra\" , 88 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! radium type ( saw_type ), parameter , public :: Ac = & saw_type ( \"actinium\" , \"Ac\" , 89 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! actinium type ( saw_type ), parameter , public :: Th = & saw_type ( \"thorium\" , \"Th\" , 90 , & nan_dp , nan_dp , 23 2.0377_dp , 0.0004_dp , & 23 2.04_dp , 0.01_dp , \"\" ) !! thorium type ( saw_type ), parameter , public :: Pa = & saw_type ( \"protactinium\" , \"Pa\" , 91 , & nan_dp , nan_dp , 23 1.03588_dp , 0.00001_dp , & 23 1.04_dp , 0.01_dp , \"\" ) !! protactinium type ( saw_type ), parameter , public :: U = & saw_type ( \"uranium\" , \"U\" , 92 , & nan_dp , nan_dp , 23 8.02891_dp , 0.00003_dp , & 23 8.03_dp , 0.01_dp , \"g m\" ) !! uranium type ( saw_type ), parameter , public :: Np = & saw_type ( \"neptunium\" , \"Np\" , 93 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! neptunium type ( saw_type ), parameter , public :: Pu = & saw_type ( \"plutonium\" , \"Pu\" , 94 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! plutonium type ( saw_type ), parameter , public :: Am = & saw_type ( \"americium\" , \"Am\" , 95 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! americium type ( saw_type ), parameter , public :: Cm = & saw_type ( \"curium\" , \"Cm\" , 96 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! curium type ( saw_type ), parameter , public :: Bk = & saw_type ( \"berkelium\" , \"Bk\" , 97 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! berkelium type ( saw_type ), parameter , public :: Cf = & saw_type ( \"californium\" , \"Cf\" , 98 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! californium type ( saw_type ), parameter , public :: Es = & saw_type ( \"einsteinium\" , \"Es\" , 99 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! einsteinium type ( saw_type ), parameter , public :: Fm = & saw_type ( \"fermium\" , \"Fm\" , 100 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! fermium type ( saw_type ), parameter , public :: Md = & saw_type ( \"mendelevium\" , \"Md\" , 101 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! mendelevium type ( saw_type ), parameter , public :: No = & saw_type ( \"nobelium\" , \"No\" , 102 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! nobelium type ( saw_type ), parameter , public :: Lr = & saw_type ( \"lawrencium\" , \"Lr\" , 103 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! lawrencium type ( saw_type ), parameter , public :: Rf = & saw_type ( \"rutherfordium\" , \"Rf\" , 104 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! rutherfordium type ( saw_type ), parameter , public :: Db = & saw_type ( \"dubnium\" , \"Db\" , 105 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! dubnium type ( saw_type ), parameter , public :: Sg = & saw_type ( \"seaborgium\" , \"Sg\" , 106 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! seaborgium type ( saw_type ), parameter , public :: Bh = & saw_type ( \"bohrium\" , \"Bh\" , 107 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! bohrium type ( saw_type ), parameter , public :: Hs = & saw_type ( \"hassium\" , \"Hs\" , 108 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! hassium type ( saw_type ), parameter , public :: Mt = & saw_type ( \"meitnerium\" , \"Mt\" , 109 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! meitnerium type ( saw_type ), parameter , public :: Ds = & saw_type ( \"darmstadtium\" , \"Ds\" , 110 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! darmstadtium type ( saw_type ), parameter , public :: Rg = & saw_type ( \"roentgenium\" , \"Rg\" , 111 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! roentgenium type ( saw_type ), parameter , public :: Cn = & saw_type ( \"copernicium\" , \"Cn\" , 112 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! copernicium type ( saw_type ), parameter , public :: Nh = & saw_type ( \"nihonium\" , \"Nh\" , 113 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! nihonium type ( saw_type ), parameter , public :: Fl = & saw_type ( \"flerovium\" , \"Fl\" , 114 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! flerovium type ( saw_type ), parameter , public :: Mc = & saw_type ( \"moscovium\" , \"Mc\" , 115 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! moscovium type ( saw_type ), parameter , public :: Lv = & saw_type ( \"livermorium\" , \"Lv\" , 116 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! livermorium type ( saw_type ), parameter , public :: Ts = & saw_type ( \"tennesine\" , \"Ts\" , 117 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! tennesine type ( saw_type ), parameter , public :: Og = & saw_type ( \"organesson\" , \"Og\" , 118 , & nan_dp , nan_dp , nan_dp , nan_dp , & nan_dp , nan_dp , \"\" ) !! organesson end module ciaaw__saw_2021","tags":"","loc":"sourcefile/ciaaw_saw_2021.f90.html"},{"title":"ciaaw_version.f90 – ciaaw","text":"Files dependent on this one sourcefile~~ciaaw_version.f90~~AfferentGraph sourcefile~ciaaw_version.f90 ciaaw_version.f90 sourcefile~capi_version.f90 capi_version.f90 sourcefile~capi_version.f90->sourcefile~ciaaw_version.f90 sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~ciaaw.f90->sourcefile~ciaaw_version.f90 sourcefile~capi.f90 capi.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 sourcefile~capi.f90->sourcefile~capi_version.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module ciaaw__version !! Version implicit none private character ( len =* ), parameter :: version = \"0.4.2\" character ( len = :), allocatable , target :: version_f character ( len = :), allocatable , target :: version_c public :: get_version contains function get_version () result ( fptr ) !! Get the version implicit none character ( len = :), pointer :: fptr !! Fortran pointer to a string indicating the version.. if ( allocated ( version_f )) then deallocate ( version_f ) endif allocate ( character ( len = len ( version )) :: version_f ) version_f = version fptr => version_f end function end module ciaaw__version","tags":"","loc":"sourcefile/ciaaw_version.f90.html"},{"title":"ciaaw.f90 – ciaaw","text":"This file depends on sourcefile~~ciaaw.f90~~EfferentGraph sourcefile~ciaaw.f90 ciaaw.f90 sourcefile~capi.f90 capi.f90 sourcefile~ciaaw.f90->sourcefile~capi.f90 sourcefile~ciaaw_saw.f90 ciaaw_saw.f90 sourcefile~ciaaw.f90->sourcefile~ciaaw_saw.f90 sourcefile~ciaaw_version.f90 ciaaw_version.f90 sourcefile~ciaaw.f90->sourcefile~ciaaw_version.f90 sourcefile~capi_saw.f90 capi_saw.f90 sourcefile~capi.f90->sourcefile~capi_saw.f90 sourcefile~capi_version.f90 capi_version.f90 sourcefile~capi.f90->sourcefile~capi_version.f90 sourcefile~ciaaw_saw_2021.f90 ciaaw_saw_2021.f90 sourcefile~ciaaw_saw.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~ciaaw_saw_type.f90 ciaaw_saw_type.f90 sourcefile~ciaaw_saw.f90->sourcefile~ciaaw_saw_type.f90 sourcefile~capi_saw_2021.f90 capi_saw_2021.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_2021.f90 sourcefile~capi_saw_type.f90 capi_saw_type.f90 sourcefile~capi_saw.f90->sourcefile~capi_saw_type.f90 sourcefile~capi_version.f90->sourcefile~ciaaw_version.f90 sourcefile~ciaaw_saw_2021.f90->sourcefile~ciaaw_saw_type.f90 sourcefile~capi_saw_2021.f90->sourcefile~ciaaw_saw_2021.f90 sourcefile~capi_saw_2021.f90->sourcefile~capi_saw_type.f90 Help Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module ciaaw !! Main module for the Ciaaw library. use ciaaw__version use ciaaw__saw use capi end module","tags":"","loc":"sourcefile/ciaaw.f90.html"},{"title":"Contributing and specs – ciaaw","text":"Standard atomic weights according to CIAAW.","tags":"","loc":"page/index.html"},{"title":"Changelog – ciaaw","text":"Version 0.4.2 Refractoring. Documentation update. Merge back C API and Python wrapper. Full changelog available at github Not released yet Version 0.4.1 Fix bug in max value for saw. Full changelog available at github Version 0.4.0 Fix type error in tests Refractoring Documentation update. Full changelog available at github Version 0.3.0 Code refractoring. Move C API and Python wrapper to their own repositories. Improve documentatinon. Full changelog available at github Version 0.2.0 Fix error in phosphorus name. Possibility to have standard atomic weights for several years. Full changelog available at github Version 0.1.0 All elements from the periodic table added for the saw module. They are implemented as parameter derived type. Full changelog available at github","tags":"","loc":"page/changelog.html"},{"title":"Examples – ciaaw","text":"Fortran C Python Fortran program example_in_f use ciaaw implicit none type ( saw_type ) :: elmt print '(A)' , '########### CIAAW VERSION ##########' print * , \"version \" , get_version () print '(A)' , '########### CIAAW SAW ##########' elmt = H print '(A, A)' , 'Element: ' , elmt % element print '(A, A)' , 'Symbol: ' , elmt % symbol print '(A, I3)' , 'Z: ' , elmt % z print '(A, F23.16)' , 'standard atomic weight max: ' , elmt % saw_max print '(A, F23.16)' , 'standard atomic weight min: ' , elmt % saw_min print '(A, F23.16)' , 'standard atomic weight: ' , elmt % saw print '(A, F23.16)' , 'standard atomic weight uncertainty: ' , elmt % saw_u print '(A, F23.16)' , 'abredged standard atomic weight: ' , elmt % asaw print '(A, F23.16)' , 'abredged standard atomic weight uncertainty: ' , elmt % asaw_u print '(A)' , '' elmt = F print '(A, A)' , 'Element: ' , elmt % element print '(A, A)' , 'Symbol: ' , elmt % symbol print '(A, I3)' , 'Z: ' , elmt % z print '(A, F23.16)' , 'standard atomic weight max: ' , elmt % saw_max print '(A, F23.16)' , 'standard atomic weight min: ' , elmt % saw_min print '(A, F23.16)' , 'standard atomic weight: ' , elmt % saw print '(A, F23.16)' , 'standard atomic weight uncertainty: ' , elmt % saw_u print '(A, F23.16)' , 'abredged standard atomic weight: ' , elmt % asaw print '(A, F23.16)' , 'abredged standard atomic weight uncertainty: ' , elmt % asaw_u end program C #include <stdlib.h> #include <stdio.h> #include <string.h> #include \"ciaaw.h\" int main ( void ){ struct ciaaw_saw_type elmt ; printf ( \"%s \\n \" , \"########## CIAAW VERSION ##########\" ); printf ( \"version %s \\n \" , ciaaw_get_version ()); printf ( \"%s \\n \" , \"########## CIAAW SAW ##########\" ); elmt = ciaaw_saw_H ; printf ( \"%s %s \\n \" , \"Element: \" , elmt . element ); printf ( \"%s %s \\n \" , \"Symbol: \" , elmt . symbol ); printf ( \"%s %d \\n \" , \"Z: \" , elmt . z ); printf ( \"%s %23.16f \\n \" , \"standard atomic weight max: \" , elmt . saw_max ); printf ( \"%s %23.16f \\n \" , \"standard atomic weight min: \" , elmt . saw_min ); printf ( \"%s %23.16f \\n \" , \"standard atomic weight: \" , elmt . saw ); printf ( \"%s %23.16f \\n \" , \"standard atomic weight uncertainty: \" , elmt . saw_u ); printf ( \"%s %23.16f \\n \" , \"abredged standard atomic weight: \" , elmt . asaw ); printf ( \"%s %23.16f \\n \" , \"abredged standard atomic weight uncertainty: \" , elmt . asaw_u ); printf ( \"%s \\n \" , \"\" ); elmt = ciaaw_saw_F ; printf ( \"%s %s \\n \" , \"Element: \" , elmt . element ); printf ( \"%s %s \\n \" , \"Symbol: \" , elmt . symbol ); printf ( \"%s %d \\n \" , \"Z: \" , elmt . z ); printf ( \"%s %23.16f \\n \" , \"standard atomic weight max: \" , elmt . saw_max ); printf ( \"%s %23.16f \\n \" , \"standard atomic weight min: \" , elmt . saw_min ); printf ( \"%s %23.16f \\n \" , \"standard atomic weight: \" , elmt . saw ); printf ( \"%s %23.16f \\n \" , \"standard atomic weight uncertainty: \" , elmt . saw_u ); printf ( \"%s %23.16f \\n \" , \"abredged standard atomic weight: \" , elmt . asaw ); printf ( \"%s %23.16f \\n \" , \"abredged standard atomic weight uncertainty: \" , elmt . asaw_u ); return EXIT_SUCCESS ; } Python r \"\"\"Example in python\"\"\" import sys sys . path . append ( \"../py/src/\" ) import pyciaaw print ( \"########## CIAAW VERSION ##########\" ) print ( \"version \" , pyciaaw . __version__ ) print ( \"########## CIAAW SAW ##########\" ) elmt = pyciaaw . H print ( \"Element: \" , elmt [ \"element\" ]) print ( \"Symbol: \" , elmt [ \"symbol\" ]) print ( \"Z: \" , elmt [ \"z\" ]) print ( \"standard atomic weight max: \" , elmt [ \"saw_max\" ]) print ( \"standard atomic weight min: \" , elmt [ \"saw_min\" ]) print ( \"standard atomic weight: \" , elmt [ \"saw\" ]) print ( \"standard atomic weight uncertainty: \" , elmt [ \"saw_u\" ]) print ( \"abredged standard atomic weight: \" , elmt [ \"asaw\" ]) print ( \"abredged standard atomic weight uncertainty: \" , elmt [ \"asaw_u\" ]) print () elmt = pyciaaw . F print ( \"Element: \" , elmt [ \"element\" ]) print ( \"Symbol: \" , elmt [ \"symbol\" ]) print ( \"Z: \" , elmt [ \"z\" ]) print ( \"standard atomic weight max: \" , elmt [ \"saw_max\" ]) print ( \"standard atomic weight min: \" , elmt [ \"saw_min\" ]) print ( \"standard atomic weight: \" , elmt [ \"saw\" ]) print ( \"standard atomic weight uncertainty: \" , elmt [ \"saw_u\" ]) print ( \"abredged standard atomic weight: \" , elmt [ \"asaw\" ]) print ( \"abredged standard atomic weight uncertainty: \" , elmt [ \"asaw_u\" ])","tags":"","loc":"page/examples.html"},{"title":"License – ciaaw","text":"Copyright (c) 2022-2024 Milan Skocic Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n“Software”), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions: The above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","tags":"","loc":"page/license.html"},{"title":"References – ciaaw","text":"A. Possolo, A. M. H. van der Veen, J. Meija, and D. B. Hibbert, “Interpreting and propagating the uncertainty of the standard atomic weights (iupac technical report),” Pure and Applied Chemistry, vol. 90, no. 2, pp. 395–424, 2018. A. M. H. van der Veen, J. Meija, A. Possolo, and D. B. Hibbert, “Interpretation and use of standard atomic weights (iupac technical report),” Pure and Applied Chemistry, vol. 93, no. 5, pp. 629–646, 2021. T. Prohaska, J. Irrgeher, J. Benefield, J. K. B ̈ohlke, L. A. Chesson, T. B. Coplen, T. Ding, P. J. H. Dunn, M. Gr ̈oning, N. E. Holden, H. A. J. Meijer, H. Moossen, A. Possolo, Y. Takahashi, J. Vogl, T. Walczyk, J. Wang, M. E. Wieser, S. Yoneda, X.-K. Zhu, and J. Meija, “Standard atomic weights of the elements 2021 (iupac technical report),” Pure and Applied Chemistry, vol. 94, no. 5, pp. 573–600, 2022. J. Meija et al., « Isotopic compositions of the elements 2013 (IUPAC Technical Report) », vol. 88, nᵒ 3, p. 293‑306, 2016.","tags":"","loc":"page/references.html"},{"title":"Specifications (specs) – ciaaw","text":"This is an index/directory of the specifications (specs) for each module. saw C API - Prototypes for C language.","tags":"","loc":"page/specs/index.html"},{"title":"C API – ciaaw","text":"The prototypes of the C API are defined as shown below. #ifndef CIAAW_H #define CIAAW_H #if _MSC_VER #define ADD_IMPORT __declspec(dllimport) #else #define ADD_IMPORT #endif extern char * ciaaw_get_version ( void ); struct ciaaw_saw_type { char element [ 25 ]; char symbol [ 9 ]; int z ; double saw_min ; double saw_max ; double saw ; double saw_u ; double asaw ; double asaw_u ; char footnotes [ 9 ]; }; ADD_IMPORT extern const int ciaaw_saw_YEAR ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_H ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_He ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Li ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Be ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_B ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_C ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_N ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_O ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_F ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ne ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Na ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Mg ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Al ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Si ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_P ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_S ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Cl ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ar ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_K ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ca ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Sc ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ti ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_V ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Cr ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Mn ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Fe ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Co ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ni ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Cu ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Zn ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ga ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ge ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_As ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Se ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Br ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Kr ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Rb ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Sr ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Y ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Zr ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Nb ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Mo ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Tc ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ru ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Rh ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Pd ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ag ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Cd ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_In ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Sn ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Sb ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Te ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_I ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Xe ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Cs ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ba ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_La ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ce ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Pr ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Nd ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Pm ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Sm ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Eu ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Gd ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Tb ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Dy ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ho ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Er ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Tm ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Yb ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Lu ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Hf ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ta ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_W ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Re ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Os ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ir ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Pt ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Au ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Hg ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Tl ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Pb ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Bi ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Po ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_At ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Rn ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Fr ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ra ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ac ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Th ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Pa ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_U ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Np ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Pu ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Am ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Cm ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Bk ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Cf ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Es ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Fm ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Md ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_No ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Lr ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Rf ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Db ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Sg ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Bh ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Hs ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Mt ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ds ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Rg ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Cn ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Nh ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Fl ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Mc ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Lv ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Ts ; ADD_IMPORT extern const struct ciaaw_saw_type ciaaw_saw_Og ; #endif","tags":"","loc":"page/specs/capi.html"},{"title":"SAW: Standard Atomic Weights – ciaaw","text":"Description The module ciaaw__saw_2021 is automatically generated with a simple parser written in Python. The latest standard atomic weights were released in 2021 by the ciaaw .\nAll the values for the atomic weights are provided as double precision reals in a derived type saw_type . The standard atomic weights (or realtive atomic mass), , \nare extracted from table 1 Prohaska et al. 2022 . For the elements\nthat feature an interval for the standard atomic weight, the mean value and the uncertainty are computed\nusing formulas defined in Van der Veen et al. 2021 . The standard atomic weights are a dimensionless quantity and thus they need to be multiplied by \nthe molar mass constant in order to get the value in . \nSee codata for physical constants. Example program example_in_f use ciaaw implicit none type ( saw_type ) :: elmt print '(A)' , '########### CIAAW VERSION ##########' print * , \"version \" , get_version () print '(A)' , '########### CIAAW SAW ##########' elmt = H print '(A, A)' , 'Element: ' , elmt % element print '(A, A)' , 'Symbol: ' , elmt % symbol print '(A, I3)' , 'Z: ' , elmt % z print '(A, F23.16)' , 'standard atomic weight max: ' , elmt % saw_max print '(A, F23.16)' , 'standard atomic weight min: ' , elmt % saw_min print '(A, F23.16)' , 'standard atomic weight: ' , elmt % saw print '(A, F23.16)' , 'standard atomic weight uncertainty: ' , elmt % saw_u print '(A, F23.16)' , 'abredged standard atomic weight: ' , elmt % asaw print '(A, F23.16)' , 'abredged standard atomic weight uncertainty: ' , elmt % asaw_u print '(A)' , '' elmt = F print '(A, A)' , 'Element: ' , elmt % element print '(A, A)' , 'Symbol: ' , elmt % symbol print '(A, I3)' , 'Z: ' , elmt % z print '(A, F23.16)' , 'standard atomic weight max: ' , elmt % saw_max print '(A, F23.16)' , 'standard atomic weight min: ' , elmt % saw_min print '(A, F23.16)' , 'standard atomic weight: ' , elmt % saw print '(A, F23.16)' , 'standard atomic weight uncertainty: ' , elmt % saw_u print '(A, F23.16)' , 'abredged standard atomic weight: ' , elmt % asaw print '(A, F23.16)' , 'abredged standard atomic weight uncertainty: ' , elmt % asaw_u end program","tags":"","loc":"page/specs/ciaaw_saw.html"}]}